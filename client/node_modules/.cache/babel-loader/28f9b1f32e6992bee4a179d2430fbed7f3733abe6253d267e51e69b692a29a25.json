{"ast":null,"code":"var _jsxFileName = \"/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/classWideComponents.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { getPostHeadingHome, getPostHeadingCommunity, findCommunity, findFlair, countPostComments, renderPostDisplayContent } from \"../helperFunctions\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { PhredditContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Divider() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divider\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n// Posts\n_c = Divider;\nfunction PostDisplay({\n  post,\n  id\n}) {\n  _s();\n  const {\n    commentState: {\n      comments,\n      commentIDs\n    },\n    communityState: {\n      communities\n    },\n    flairState: {\n      linkFlairs,\n      linkFlairIDs\n    },\n    showPageFunctions: {\n      showPost\n    }\n  } = useContext(PhredditContext);\n  const community = findCommunity(post, communities);\n  const flair = findFlair(post, linkFlairs, linkFlairIDs);\n  const numOfComments = countPostComments(post, commentIDs, comments);\n  const updateOnClickFunction = () => {\n    showPost(post);\n  };\n  const extractTextFromJSX = jsx => {\n    return renderToStaticMarkup(jsx).replace(/<\\/?[^>]+(>|$)/g, \"\") // Remove HTML tags\n    .trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    id: `post-${post._id}`,\n    onClick: updateOnClickFunction,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [id === \"community\" ? /*#__PURE__*/_jsxDEV(PostHeadingCommunity, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(PostHeadingHome, {\n        post: post,\n        community: community\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), flair && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-flair\",\n        children: flair.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-content\",\n        children: [extractTextFromJSX(renderPostDisplayContent(post)).substring(0, 80), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-views-comments\",\n        children: [\"Views: \", post.views, \" | Comments: \", numOfComments, \" | Votes:  \", post.votes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(PostDisplay, \"+4JzrzSfrbKCQ4oJ8A/67IwhRY0=\");\n_c2 = PostDisplay;\nfunction PostHeadingHome({\n  post,\n  community\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getPostHeadingHome(post, community)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c3 = PostHeadingHome;\nfunction PostHeadingCommunity({\n  post\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getPostHeadingCommunity(post)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c4 = PostHeadingCommunity;\nexport { Divider, PostDisplay };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"PostDisplay\");\n$RefreshReg$(_c3, \"PostHeadingHome\");\n$RefreshReg$(_c4, \"PostHeadingCommunity\");","map":{"version":3,"names":["React","useContext","getPostHeadingHome","getPostHeadingCommunity","findCommunity","findFlair","countPostComments","renderPostDisplayContent","renderToStaticMarkup","PhredditContext","jsxDEV","_jsxDEV","Divider","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","PostDisplay","post","id","_s","commentState","comments","commentIDs","communityState","communities","flairState","linkFlairs","linkFlairIDs","showPageFunctions","showPost","community","flair","numOfComments","updateOnClickFunction","extractTextFromJSX","jsx","replace","trim","_id","onClick","children","PostHeadingCommunity","PostHeadingHome","title","content","substring","views","votes","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/classWideComponents.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { getPostHeadingHome, getPostHeadingCommunity, findCommunity, findFlair, countPostComments, renderPostDisplayContent} from \"../helperFunctions\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { PhredditContext } from \"./context\";\n\nfunction Divider() {\n    return(\n        <div className=\"divider\"></div>\n    );\n}\n\n// Posts\n\nfunction PostDisplay({ post, id }) {\n    const {\n        commentState: { comments, commentIDs },\n        communityState: { communities },\n        flairState: { linkFlairs, linkFlairIDs },\n        showPageFunctions: { showPost }\n    } = useContext(PhredditContext);\n    const community = findCommunity(post, communities);\n    const flair = findFlair(post, linkFlairs, linkFlairIDs);\n    const numOfComments = countPostComments(post, commentIDs, comments);\n    const updateOnClickFunction = () => {\n        showPost(post);\n    }\n    const extractTextFromJSX = (jsx) => {\n        return renderToStaticMarkup(jsx)\n            .replace(/<\\/?[^>]+(>|$)/g, \"\")  // Remove HTML tags\n            .trim();\n    };\n    return (\n      <div className=\"post-container\" id={`post-${post._id}`} onClick={updateOnClickFunction} >\n        <div className=\"post\">\n            {/** Get post heading depending on where the posts are displayed (community or else) */}\n            {id===\"community\" ? <PostHeadingCommunity post={post}/> : <PostHeadingHome post={post} community={community}/>}\n            \n            {/** Title, Flair(if applicable), Content, Views and Comments */}\n            <h2 className=\"post-title\">{post.title}</h2>\n            {flair && <p className=\"post-flair\">{flair.content}</p>}\n            <p className=\"post-content\">{extractTextFromJSX(renderPostDisplayContent(post)).substring(0, 80)}...</p>\n            <p className=\"post-views-comments\">\n                Views: {post.views} | Comments: {numOfComments} | Votes:  {post.votes}\n            </p>\n        </div>\n      </div>\n    );\n}\n\nfunction PostHeadingHome({post, community}) {\n    return (\n        <div>\n            {getPostHeadingHome(post,community)}\n        </div>\n    );\n}\n\nfunction PostHeadingCommunity({post}) {\n    return (\n        <div>\n            {getPostHeadingCommunity(post)}\n        </div>\n    );\n}\n\n\nexport { Divider, PostDisplay };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}