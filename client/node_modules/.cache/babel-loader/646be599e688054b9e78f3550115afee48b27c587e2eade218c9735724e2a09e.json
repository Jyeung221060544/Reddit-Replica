{"ast":null,"code":"var _jsxFileName = \"/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/createPostPageView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { PhredditContext } from \"./context\";\nimport { arrayOfPostCommentsTime } from \"../helperFunctions\";\nimport axios from 'axios';\nimport ConfirmWindow from \"./confirm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreatePostPageView() {\n  _s();\n  const {\n    showPageFunctions: {\n      currentPage\n    }\n  } = useContext(PhredditContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main\",\n    id: \"create-post-page\",\n    style: {\n      display: currentPage === 'create-post' ? 'block' : 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"create-post-page-inner\",\n      children: /*#__PURE__*/_jsxDEV(Contents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePostPageView, \"M5wCf6JcZkJScSpVfoulDIJnNxo=\");\n_c = CreatePostPageView;\nfunction Contents() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"create-post-body\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommunityInquiry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TitleInquiry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectFlairInquiry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewFlairInquiry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentInquiry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Contents;\nfunction Title() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-title\",\n    id: \"content-banner\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Title;\nfunction CommunityInquiry() {\n  _s2();\n  const {\n    communityState: {\n      communities\n    },\n    loginState: {\n      login\n    },\n    userState: {\n      user\n    }\n  } = useContext(PhredditContext);\n  var sortCommunityByUser = [];\n  if (login) {\n    const userCommunityIDs = new Set(user.communityIDs.map(c => {\n      var _c$_id;\n      return ((_c$_id = c._id) === null || _c$_id === void 0 ? void 0 : _c$_id.toString()) || c.toString();\n    }));\n    sortCommunityByUser = [...communities].sort((a, b) => {\n      var _a$_id, _b$_id;\n      const aJoined = userCommunityIDs.has((_a$_id = a._id) === null || _a$_id === void 0 ? void 0 : _a$_id.toString());\n      const bJoined = userCommunityIDs.has((_b$_id = b._id) === null || _b$_id === void 0 ? void 0 : _b$_id.toString());\n      if (aJoined && !bJoined) return -1; // a before b\n      if (!aJoined && bJoined) return 1; // b before a\n      return 0; // Keep original relative order if same\n    });\n  } else {\n    sortCommunityByUser = communities;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"Communities\",\n      children: \"Select Community * \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"create-post-select-community-input\",\n      className: \"input-textbox\",\n      type: \"text\",\n      children: sortCommunityByUser.map(community => {\n        return /*#__PURE__*/_jsxDEV(CommunityOptions, {\n          community: community\n        }, community._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s2(CommunityInquiry, \"T7+uAy1Tikyr/K8A8UbqqpnwP7U=\");\n_c4 = CommunityInquiry;\nfunction CommunityOptions({\n  community\n}) {\n  return /*#__PURE__*/_jsxDEV(\"option\", {\n    value: community._id,\n    children: community.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_c5 = CommunityOptions;\nfunction TitleInquiry() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: \"Title * \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"create-post-title-input\",\n      className: \"input-textbox\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"input-note\",\n      children: \"Max Length: 100 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_c6 = TitleInquiry;\nfunction SelectFlairInquiry() {\n  _s3();\n  const {\n    flairState: {\n      linkFlairs\n    }\n  } = useContext(PhredditContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"Flair\",\n      children: \"Select Existing Flair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"create-post-select-flair-input\",\n      className: \"input-textbox\",\n      name: \"flairs\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"no-flair\",\n        defaultValue: true,\n        children: \"no flair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), linkFlairs.map(linkFlair => {\n        return /*#__PURE__*/_jsxDEV(FlairOptions, {\n          linkFlair: linkFlair\n        }, linkFlair._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s3(SelectFlairInquiry, \"69A3oqMZqcvuGRFkIcVkghDExoc=\");\n_c7 = SelectFlairInquiry;\nfunction FlairOptions({\n  linkFlair\n}) {\n  return /*#__PURE__*/_jsxDEV(\"option\", {\n    value: linkFlair._id,\n    children: linkFlair.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_c8 = FlairOptions;\nfunction NewFlairInquiry() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: \"Or Create a New Flair \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"create-post-new-flair-input\",\n      className: \"input-textbox\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"input-note\",\n      children: \"Optional, Max Length: 30 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_c9 = NewFlairInquiry;\nfunction ContentInquiry() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: \"Content *\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"create-post-content-input\",\n      className: \"input-textbox\",\n      rows: \"5\",\n      cols: \"33\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_c10 = ContentInquiry;\nfunction UserInquiry() {\n  _s4();\n  const {\n    userState: {\n      user\n    }\n  } = useContext(PhredditContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: \"Username * \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"create-post-username-input\",\n      className: \"input-textbox\",\n      type: \"text\",\n      value: user === null ? \"\" : user.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s4(UserInquiry, \"/ksni3v2QFNx0+PfxgPhJwNkCcs=\");\n_c11 = UserInquiry;\nfunction SubmitButton() {\n  _s5();\n  const {\n    postState: {\n      setPosts,\n      setActivePosts,\n      setNewestPosts,\n      setOldestPosts,\n      setPostIDs\n    },\n    flairState: {\n      linkFlairs,\n      linkFlairIDs,\n      setLinkFlairs,\n      setLinkFlairIDs\n    },\n    communityState: {\n      setCommunities\n    },\n    showPageFunctions: {\n      handleShowHomePage\n    },\n    commentState: {\n      commentIDs\n    },\n    userState: {\n      user,\n      setUser,\n      setUsers\n    }\n  } = useContext(PhredditContext);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const makePost = async () => {\n    let post_community = document.getElementById(\"create-post-select-community-input\").value;\n    let post_title = document.getElementById(\"create-post-title-input\").value;\n    document.getElementById(\"create-post-title-input\").value = \"\";\n    let post_flair = document.getElementById(\"create-post-select-flair-input\").value;\n    let new_post_flair = document.getElementById(\"create-post-new-flair-input\").value;\n    document.getElementById(\"create-post-new-flair-input\").value = \"\";\n    let post_content = document.getElementById(\"create-post-content-input\").value;\n    document.getElementById(\"create-post-content-input\").value = \"\";\n    let post_user = user.displayName;\n    // document.getElementById(\"create-post-username-input\").value = \"\";\n\n    let build = \"\";\n    //Error checks on hyperlinks\n    const pattern = /\\[(.*?)\\]\\((.*?)\\)/g;\n    const hyperlinks = [...post_content.matchAll(pattern)];\n    let hyperlinkIssue = false;\n    for (const link of hyperlinks) {\n      const [_, text, url] = link;\n      if (!text.trim()) {\n        build += \"The text inside [] cannotbe empty for hyperlinks \\n\";\n        hyperlinkIssue = true;\n      }\n      if (!/^https?:\\/\\//.test(url)) {\n        build += \"The hyperlink must start with 'http://' or 'https://'\\n\";\n        hyperlinkIssue = true;\n      }\n    }\n    if (post_title === \"\" || post_title.length > 100 || post_content === \"\" || post_user === \"\" || post_flair != \"no-flair\" && new_post_flair != \"\" || post_flair === \"no-flair\" && new_post_flair.length > 30 || hyperlinkIssue) {\n      if (post_title == \"\") {\n        build += \"Please enter a title!\\n\";\n      }\n      if (post_title.length > 100) {\n        build += \"Title exceeded maximum capacity!\\n\";\n      }\n      if (post_flair != \"no-flair\" && new_post_flair != \"\") {\n        build += \"Please pick a Flair or No Flair to create a new Flair!\\n\";\n      }\n      if (post_flair === \"no-flair\" && new_post_flair.length > 30) {\n        build += \"Flair exceeded maximum capacity!\\n\";\n      }\n      if (post_content === \"\") {\n        build += \"Please enter post content!\\n\";\n      }\n      if (post_user === \"\") {\n        build += \"Please enter username!\\n\";\n      }\n      setConfirmMessage(build + \"\\nTry Again!\");\n      setShowConfirm(true);\n      return;\n    } else {\n      try {\n        var _postFlair;\n        var postFlair;\n        if (post_flair === \"no-flair\" && new_post_flair === \"\") {\n          postFlair = null;\n        } else if (post_flair != \"no-flair\" && new_post_flair == \"\") {\n          postFlair = linkFlairs[linkFlairIDs.indexOf(post_flair)];\n        } else if (post_flair == \"no-flair\" && new_post_flair != \"\") {\n          const flairRes = await axios.post(\"http://127.0.0.1:8000/addlinkflair\", {\n            content: new_post_flair\n          });\n          setLinkFlairs(prev => [...prev, flairRes.data]);\n          setLinkFlairIDs(prev => [...prev, flairRes._id]);\n          postFlair = flairRes.data;\n        }\n        const postRes = await axios.post(\"http://127.0.0.1:8000/addpost\", {\n          title: post_title,\n          content: post_content,\n          linkFlairID: (_postFlair = postFlair) === null || _postFlair === void 0 ? void 0 : _postFlair._id,\n          postedBy: user,\n          postedDate: new Date(),\n          communityID: post_community,\n          userID: user._id\n        });\n        const allPosts = await axios.get(\"http://127.0.0.1:8000/get/posts\");\n        const posts = allPosts.data;\n        setPosts(posts);\n        setPostIDs(posts.map(p => p._id));\n        setNewestPosts([...posts].sort((a, b) => new Date(b.postedDate) - new Date(a.postedDate)));\n        setOldestPosts([...posts].sort((a, b) => new Date(a.postedDate) - new Date(b.postedDate)));\n        setActivePosts([...posts].sort((a, b) => {\n          const postComments1 = arrayOfPostCommentsTime(a, a.commentIDs, commentIDs);\n          const postComments2 = arrayOfPostCommentsTime(b, b.commentIDs, commentIDs);\n          return Math.max(...postComments2, 0) - Math.max(...postComments1, 0);\n        }));\n        const updatedCommunities = await axios.get(\"http://127.0.0.1:8000/get/communities\");\n        setCommunities(updatedCommunities.data);\n        const [usersRes, updatedUserResponse] = await Promise.all([axios.get(\"http://127.0.0.1:8000/get/users\"), axios.get(`http://127.0.0.1:8000/user/${user._id}`)]);\n        setUsers(usersRes.data);\n        setUser(updatedUserResponse.data);\n        handleShowHomePage();\n      } catch (err) {\n        console.error(\"Error submitting post:\", err);\n        alert(\"Failed to submit post.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"create-post-button-input\",\n        className: \"submit-button\",\n        type: \"button\",\n        value: \"Submit Post\",\n        onClick: makePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(ConfirmWindow, {\n      title: \"Error Creating Post\",\n      message: confirmMessage,\n      onConfirm: () => setShowConfirm(false),\n      onCancel: () => setShowConfirm(false),\n      confirmButtonMessage: \"Okay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n_s5(SubmitButton, \"8Rrvl4MOOWEJ5SzR2y7R4lfxTzE=\");\n_c12 = SubmitButton;\nexport { CreatePostPageView };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"CreatePostPageView\");\n$RefreshReg$(_c2, \"Contents\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"CommunityInquiry\");\n$RefreshReg$(_c5, \"CommunityOptions\");\n$RefreshReg$(_c6, \"TitleInquiry\");\n$RefreshReg$(_c7, \"SelectFlairInquiry\");\n$RefreshReg$(_c8, \"FlairOptions\");\n$RefreshReg$(_c9, \"NewFlairInquiry\");\n$RefreshReg$(_c10, \"ContentInquiry\");\n$RefreshReg$(_c11, \"UserInquiry\");\n$RefreshReg$(_c12, \"SubmitButton\");","map":{"version":3,"names":["React","useContext","useState","PhredditContext","arrayOfPostCommentsTime","axios","ConfirmWindow","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePostPageView","_s","showPageFunctions","currentPage","className","id","style","display","children","Contents","fileName","_jsxFileName","lineNumber","columnNumber","_c","Title","CommunityInquiry","TitleInquiry","SelectFlairInquiry","NewFlairInquiry","ContentInquiry","SubmitButton","_c2","_c3","_s2","communityState","communities","loginState","login","userState","user","sortCommunityByUser","userCommunityIDs","Set","communityIDs","map","c","_c$_id","_id","toString","sort","a","b","_a$_id","_b$_id","aJoined","has","bJoined","htmlFor","type","community","CommunityOptions","_c4","value","name","_c5","_c6","_s3","flairState","linkFlairs","defaultValue","linkFlair","FlairOptions","_c7","content","_c8","_c9","rows","cols","_c10","UserInquiry","_s4","displayName","_c11","_s5","postState","setPosts","setActivePosts","setNewestPosts","setOldestPosts","setPostIDs","linkFlairIDs","setLinkFlairs","setLinkFlairIDs","setCommunities","handleShowHomePage","commentState","commentIDs","setUser","setUsers","showConfirm","setShowConfirm","confirmMessage","setConfirmMessage","makePost","post_community","document","getElementById","post_title","post_flair","new_post_flair","post_content","post_user","build","pattern","hyperlinks","matchAll","hyperlinkIssue","link","_","text","url","trim","test","length","_postFlair","postFlair","indexOf","flairRes","post","prev","data","postRes","title","linkFlairID","postedBy","postedDate","Date","communityID","userID","allPosts","get","posts","p","postComments1","postComments2","Math","max","updatedCommunities","usersRes","updatedUserResponse","Promise","all","err","console","error","alert","onClick","message","onConfirm","onCancel","confirmButtonMessage","_c12","$RefreshReg$"],"sources":["/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/createPostPageView.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { PhredditContext } from \"./context\";\nimport { arrayOfPostCommentsTime } from \"../helperFunctions\";\nimport axios from 'axios';\nimport ConfirmWindow from \"./confirm\";\n\nfunction CreatePostPageView() {\n    const {\n        showPageFunctions: { currentPage }\n    } = useContext(PhredditContext);\n    return (\n        <div className=\"container main\" id=\"create-post-page\" style={{ display: currentPage === 'create-post' ? 'block' : 'none'}}>\n            <div className=\"container\" id=\"create-post-page-inner\">\n                <Contents />\n            </div>\n        </div>\n    );\n      \n}\n\nfunction Contents() {\n    return (\n        <div id=\"create-post-body\">\n            <Title />\n            <CommunityInquiry />\n            <TitleInquiry />\n            <SelectFlairInquiry />\n            <NewFlairInquiry />\n            <ContentInquiry />\n            {/* <UserInquiry /> */}\n            <SubmitButton />\n        </div>\n    );\n}\n\nfunction Title() {\n    return (\n        <div className=\"create-title\"  id=\"content-banner\">\n            <h2>Create a New Post</h2>\n        </div>\n    );\n}\n\nfunction CommunityInquiry() {\n    const { \n        communityState: { communities },\n        loginState: {login},\n        userState: { user },\n    } = useContext(PhredditContext);\n\n    var sortCommunityByUser = [];\n    if(login){\n        const userCommunityIDs = new Set(user.communityIDs.map(c => c._id?.toString() || c.toString()));\n        sortCommunityByUser = [...communities].sort((a, b) => {\n            const aJoined = userCommunityIDs.has(a._id?.toString());\n            const bJoined = userCommunityIDs.has(b._id?.toString());\n\n            if (aJoined && !bJoined) return -1;  // a before b\n            if (!aJoined && bJoined) return 1;   // b before a\n            return 0; // Keep original relative order if same\n        });\n\n    } else {\n        sortCommunityByUser = communities;\n    }\n\n    return (\n        <div className=\"dropdown-container\">\n            <label className=\"label\" htmlFor=\"Communities\">Select Community * </label>\n            <select id=\"create-post-select-community-input\" className=\"input-textbox\"type=\"text\"> \n                {sortCommunityByUser.map((community) => {\n                    return <CommunityOptions key={community._id} community={community} />\n                })}\n            </select>\n        </div>\n    );\n}\n\nfunction CommunityOptions({community}) {\n    return (\n        <option value={community._id}>{community.name}</option>\n    );\n}\n\nfunction TitleInquiry() {\n    return (\n        <div className=\"input-container\">\n            <br />\n            <label className=\"label\">Title * </label>\n            <input id=\"create-post-title-input\" className=\"input-textbox\"type=\"text\" />\n            <p className=\"input-note\">Max Length: 100 characters</p>\n        </div>\n    );\n}\n\nfunction SelectFlairInquiry() {\n    const { flairState: { linkFlairs } } = useContext(PhredditContext);\n    return (\n        <div className=\"dropdown-container\">\n            <br />\n            <label className=\"label\" htmlFor=\"Flair\">Select Existing Flair</label>\n            <select id=\"create-post-select-flair-input\" className=\"input-textbox\" name=\"flairs\">\n                <option value=\"no-flair\" defaultValue>no flair</option>\n                {linkFlairs.map((linkFlair) => {\n                    return <FlairOptions key={linkFlair._id} linkFlair={linkFlair} />\n                })}\n            </select>\n        </div>\n    );\n}\n\nfunction FlairOptions({linkFlair}) {\n    return (\n        <option value={linkFlair._id}>{linkFlair.content}</option>\n    );\n}\n\nfunction NewFlairInquiry() {\n    return (\n        <div className=\"input-container\">\n            <label className=\"label\">Or Create a New Flair </label>\n            <input id=\"create-post-new-flair-input\" className=\"input-textbox\" type=\"text\" />\n            <p className=\"input-note\">Optional, Max Length: 30 characters</p>\n        </div>\n    );\n}\n\nfunction ContentInquiry() {\n    return (\n        <div className=\"input-container\">\n            <br />\n            <label className=\"label\">Content *</label>\n            <textarea id=\"create-post-content-input\" className=\"input-textbox\" rows=\"5\" cols=\"33\"></textarea>\n        </div>\n    );\n}\n\nfunction UserInquiry() {\n    const {\n        userState: {user}\n    } = useContext(PhredditContext);\n    return (\n        <div className=\"input-container\">\n            <br />\n            <label className=\"label\">Username * </label>\n            <input id=\"create-post-username-input\" className=\"input-textbox\" type=\"text\" value={(user===null)?\"\":user.displayName}/>\n        </div>\n    );\n}\n\nfunction SubmitButton() {\n    const {\n        postState: { setPosts, setActivePosts, setNewestPosts, setOldestPosts, setPostIDs },\n        flairState: { linkFlairs, linkFlairIDs, setLinkFlairs, setLinkFlairIDs },\n        communityState: {setCommunities},\n        showPageFunctions: { handleShowHomePage },\n        commentState: {commentIDs},\n        userState: {user, setUser, setUsers}\n    } = useContext(PhredditContext);\n    const [showConfirm, setShowConfirm] = useState(false);\n    const [confirmMessage, setConfirmMessage] = useState(\"\");\n\n    const makePost = async () => {\n        let post_community = document.getElementById(\"create-post-select-community-input\").value;\n        let post_title = document.getElementById(\"create-post-title-input\").value;\n        document.getElementById(\"create-post-title-input\").value = \"\";\n        let post_flair = document.getElementById(\"create-post-select-flair-input\").value;\n        let new_post_flair = document.getElementById(\"create-post-new-flair-input\").value;\n        document.getElementById(\"create-post-new-flair-input\").value = \"\";\n        let post_content = document.getElementById(\"create-post-content-input\").value;\n        document.getElementById(\"create-post-content-input\").value = \"\";\n        let post_user = user.displayName;\n        // document.getElementById(\"create-post-username-input\").value = \"\";\n\n        let build = \"\";\n        //Error checks on hyperlinks\n        const pattern = /\\[(.*?)\\]\\((.*?)\\)/g;\n        const hyperlinks = [...post_content.matchAll(pattern)];\n        let hyperlinkIssue=false;\n\n        for(const link of hyperlinks) {\n            const [_, text, url] = link;\n\n            if (!text.trim()) {\n                build+=\"The text inside [] cannotbe empty for hyperlinks \\n\"\n                hyperlinkIssue=true;\n            }\n            if (!/^https?:\\/\\//.test(url)) {\n               build+=\"The hyperlink must start with 'http://' or 'https://'\\n\"\n               hyperlinkIssue=true;\n            }\n        }\n\n        if(post_title === \"\" || post_title.length > 100 || post_content === \"\" || post_user === \"\" || (post_flair != \"no-flair\" && new_post_flair != \"\") || (post_flair === \"no-flair\" && new_post_flair.length > 30) || hyperlinkIssue){\n            \n            if(post_title == \"\") {\n              build += \"Please enter a title!\\n\";\n            }\n            if(post_title.length > 100) {\n              build += \"Title exceeded maximum capacity!\\n\";\n            }\n            if((post_flair != \"no-flair\" && new_post_flair != \"\")) {\n              build += \"Please pick a Flair or No Flair to create a new Flair!\\n\";\n            }\n            if((post_flair === \"no-flair\" && new_post_flair.length > 30)) {\n              build += \"Flair exceeded maximum capacity!\\n\";\n            }\n            if(post_content === \"\") {\n              build += \"Please enter post content!\\n\";\n            }\n            if(post_user === \"\") {\n              build += \"Please enter username!\\n\";\n            }\n        \n            setConfirmMessage(build+\"\\nTry Again!\");\n            setShowConfirm(true);\n            return;\n        } else {\n            try {\n                var postFlair;\n                if(post_flair === \"no-flair\" && new_post_flair === \"\"){\n                    postFlair = null;\n                } else if(post_flair != \"no-flair\" && new_post_flair == \"\"){\n                    postFlair = linkFlairs[linkFlairIDs.indexOf(post_flair)];\n                } else if(post_flair == \"no-flair\" && new_post_flair != \"\"){\n                    const flairRes = await axios.post(\"http://127.0.0.1:8000/addlinkflair\", {\n                        content: new_post_flair\n                    });\n                    setLinkFlairs(prev => [...prev, flairRes.data]);\n                    setLinkFlairIDs(prev => [...prev, flairRes._id]);\n                    postFlair = flairRes.data;\n                } \n    \n                const postRes = await axios.post(\"http://127.0.0.1:8000/addpost\", {\n                    title: post_title,\n                    content: post_content,\n                    linkFlairID: postFlair?._id,\n                    postedBy: user,\n                    postedDate: new Date(),\n                    communityID: post_community,\n                    userID: user._id\n                });\n    \n                const allPosts = await axios.get(\"http://127.0.0.1:8000/get/posts\");\n                const posts = allPosts.data;\n    \n                setPosts(posts);\n                setPostIDs(posts.map(p => p._id));\n                setNewestPosts([...posts].sort((a, b) => new Date(b.postedDate) - new Date(a.postedDate)));\n                setOldestPosts([...posts].sort((a, b) => new Date(a.postedDate) - new Date(b.postedDate)));\n                setActivePosts([...posts].sort((a, b) => {\n                    const postComments1 = arrayOfPostCommentsTime(a, a.commentIDs, commentIDs);\n                    const postComments2 = arrayOfPostCommentsTime(b, b.commentIDs, commentIDs);\n                    return Math.max(...postComments2, 0) - Math.max(...postComments1, 0);\n                }));\n    \n                const updatedCommunities = await axios.get(\"http://127.0.0.1:8000/get/communities\");\n                setCommunities(updatedCommunities.data);\n    \n                const [usersRes, updatedUserResponse] = await Promise.all([\n                    axios.get(\"http://127.0.0.1:8000/get/users\"),\n                    axios.get(`http://127.0.0.1:8000/user/${user._id}`)\n                  ]);\n                setUsers(usersRes.data);\n                setUser(updatedUserResponse.data);\n\n                handleShowHomePage();\n            } catch (err) {\n                console.error(\"Error submitting post:\", err);\n                alert(\"Failed to submit post.\");\n            }\n        }\n    }\n\n    return (\n        <>\n        <div className=\"button-container\">\n            <input id=\"create-post-button-input\" className=\"submit-button\" type=\"button\"  value=\"Submit Post\" onClick={makePost}/>\n        </div>\n        {showConfirm && (\n                    <ConfirmWindow\n                        title=\"Error Creating Post\"\n                        message={confirmMessage}\n                        onConfirm={() => setShowConfirm(false)}\n                        onCancel={() => setShowConfirm(false)}\n                        confirmButtonMessage=\"Okay\"\n                    />\n                )}\n        </>\n    );\n\n}\nexport { CreatePostPageView };"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,WAAW;AAC3C,SAASC,uBAAuB,QAAQ,oBAAoB;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IACFC,iBAAiB,EAAE;MAAEC;IAAY;EACrC,CAAC,GAAGb,UAAU,CAACE,eAAe,CAAC;EAC/B,oBACIK,OAAA;IAAKO,SAAS,EAAC,gBAAgB;IAACC,EAAE,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAEJ,WAAW,KAAK,aAAa,GAAG,OAAO,GAAG;IAAM,CAAE;IAAAK,QAAA,eACtHX,OAAA;MAAKO,SAAS,EAAC,WAAW;MAACC,EAAE,EAAC,wBAAwB;MAAAG,QAAA,eAClDX,OAAA,CAACY,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACZ,EAAA,CAZQD,kBAAkB;AAAAc,EAAA,GAAlBd,kBAAkB;AAc3B,SAASS,QAAQA,CAAA,EAAG;EAChB,oBACIZ,OAAA;IAAKQ,EAAE,EAAC,kBAAkB;IAAAG,QAAA,gBACtBX,OAAA,CAACkB,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACThB,OAAA,CAACmB,gBAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpBhB,OAAA,CAACoB,YAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBhB,OAAA,CAACqB,kBAAkB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBhB,OAAA,CAACsB,eAAe;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBhB,OAAA,CAACuB,cAAc;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElBhB,OAAA,CAACwB,YAAY;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd;AAACS,GAAA,GAbQb,QAAQ;AAejB,SAASM,KAAKA,CAAA,EAAG;EACb,oBACIlB,OAAA;IAAKO,SAAS,EAAC,cAAc;IAAEC,EAAE,EAAC,gBAAgB;IAAAG,QAAA,eAC9CX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd;AAACU,GAAA,GANQR,KAAK;AAQd,SAASC,gBAAgBA,CAAA,EAAG;EAAAQ,GAAA;EACxB,MAAM;IACFC,cAAc,EAAE;MAAEC;IAAY,CAAC;IAC/BC,UAAU,EAAE;MAACC;IAAK,CAAC;IACnBC,SAAS,EAAE;MAAEC;IAAK;EACtB,CAAC,GAAGxC,UAAU,CAACE,eAAe,CAAC;EAE/B,IAAIuC,mBAAmB,GAAG,EAAE;EAC5B,IAAGH,KAAK,EAAC;IACL,MAAMI,gBAAgB,GAAG,IAAIC,GAAG,CAACH,IAAI,CAACI,YAAY,CAACC,GAAG,CAACC,CAAC;MAAA,IAAAC,MAAA;MAAA,OAAI,EAAAA,MAAA,GAAAD,CAAC,CAACE,GAAG,cAAAD,MAAA,uBAALA,MAAA,CAAOE,QAAQ,CAAC,CAAC,KAAIH,CAAC,CAACG,QAAQ,CAAC,CAAC;IAAA,EAAC,CAAC;IAC/FR,mBAAmB,GAAG,CAAC,GAAGL,WAAW,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAC,MAAA,EAAAC,MAAA;MAClD,MAAMC,OAAO,GAAGb,gBAAgB,CAACc,GAAG,EAAAH,MAAA,GAACF,CAAC,CAACH,GAAG,cAAAK,MAAA,uBAALA,MAAA,CAAOJ,QAAQ,CAAC,CAAC,CAAC;MACvD,MAAMQ,OAAO,GAAGf,gBAAgB,CAACc,GAAG,EAAAF,MAAA,GAACF,CAAC,CAACJ,GAAG,cAAAM,MAAA,uBAALA,MAAA,CAAOL,QAAQ,CAAC,CAAC,CAAC;MAEvD,IAAIM,OAAO,IAAI,CAACE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAE;MACrC,IAAI,CAACF,OAAO,IAAIE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAG;MACrC,OAAO,CAAC,CAAC,CAAC;IACd,CAAC,CAAC;EAEN,CAAC,MAAM;IACHhB,mBAAmB,GAAGL,WAAW;EACrC;EAEA,oBACI7B,OAAA;IAAKO,SAAS,EAAC,oBAAoB;IAAAI,QAAA,gBAC/BX,OAAA;MAAOO,SAAS,EAAC,OAAO;MAAC4C,OAAO,EAAC,aAAa;MAAAxC,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1EhB,OAAA;MAAQQ,EAAE,EAAC,oCAAoC;MAACD,SAAS,EAAC,eAAe;MAAA6C,IAAI,EAAC,MAAM;MAAAzC,QAAA,EAC/EuB,mBAAmB,CAACI,GAAG,CAAEe,SAAS,IAAK;QACpC,oBAAOrD,OAAA,CAACsD,gBAAgB;UAAqBD,SAAS,EAAEA;QAAU,GAApCA,SAAS,CAACZ,GAAG;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAAC;MACzE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACW,GAAA,CAjCQR,gBAAgB;AAAAoC,GAAA,GAAhBpC,gBAAgB;AAmCzB,SAASmC,gBAAgBA,CAAC;EAACD;AAAS,CAAC,EAAE;EACnC,oBACIrD,OAAA;IAAQwD,KAAK,EAAEH,SAAS,CAACZ,GAAI;IAAA9B,QAAA,EAAE0C,SAAS,CAACI;EAAI;IAAA5C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAE/D;AAAC0C,GAAA,GAJQJ,gBAAgB;AAMzB,SAASlC,YAAYA,CAAA,EAAG;EACpB,oBACIpB,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAAAI,QAAA,gBAC5BX,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAOO,SAAS,EAAC,OAAO;MAAAI,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzChB,OAAA;MAAOQ,EAAE,EAAC,yBAAyB;MAACD,SAAS,EAAC,eAAe;MAAA6C,IAAI,EAAC;IAAM;MAAAvC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3EhB,OAAA;MAAGO,SAAS,EAAC,YAAY;MAAAI,QAAA,EAAC;IAA0B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEd;AAAC2C,GAAA,GATQvC,YAAY;AAWrB,SAASC,kBAAkBA,CAAA,EAAG;EAAAuC,GAAA;EAC1B,MAAM;IAAEC,UAAU,EAAE;MAAEC;IAAW;EAAE,CAAC,GAAGrE,UAAU,CAACE,eAAe,CAAC;EAClE,oBACIK,OAAA;IAAKO,SAAS,EAAC,oBAAoB;IAAAI,QAAA,gBAC/BX,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAOO,SAAS,EAAC,OAAO;MAAC4C,OAAO,EAAC,OAAO;MAAAxC,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtEhB,OAAA;MAAQQ,EAAE,EAAC,gCAAgC;MAACD,SAAS,EAAC,eAAe;MAACkD,IAAI,EAAC,QAAQ;MAAA9C,QAAA,gBAC/EX,OAAA;QAAQwD,KAAK,EAAC,UAAU;QAACO,YAAY;QAAApD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtD8C,UAAU,CAACxB,GAAG,CAAE0B,SAAS,IAAK;QAC3B,oBAAOhE,OAAA,CAACiE,YAAY;UAAqBD,SAAS,EAAEA;QAAU,GAApCA,SAAS,CAACvB,GAAG;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAAC;MACrE,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC4C,GAAA,CAdQvC,kBAAkB;AAAA6C,GAAA,GAAlB7C,kBAAkB;AAgB3B,SAAS4C,YAAYA,CAAC;EAACD;AAAS,CAAC,EAAE;EAC/B,oBACIhE,OAAA;IAAQwD,KAAK,EAAEQ,SAAS,CAACvB,GAAI;IAAA9B,QAAA,EAAEqD,SAAS,CAACG;EAAO;IAAAtD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAElE;AAACoD,GAAA,GAJQH,YAAY;AAMrB,SAAS3C,eAAeA,CAAA,EAAG;EACvB,oBACItB,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAAAI,QAAA,gBAC5BX,OAAA;MAAOO,SAAS,EAAC,OAAO;MAAAI,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvDhB,OAAA;MAAOQ,EAAE,EAAC,6BAA6B;MAACD,SAAS,EAAC,eAAe;MAAC6C,IAAI,EAAC;IAAM;MAAAvC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChFhB,OAAA;MAAGO,SAAS,EAAC,YAAY;MAAAI,QAAA,EAAC;IAAmC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd;AAACqD,GAAA,GARQ/C,eAAe;AAUxB,SAASC,cAAcA,CAAA,EAAG;EACtB,oBACIvB,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAAAI,QAAA,gBAC5BX,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAOO,SAAS,EAAC,OAAO;MAAAI,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1ChB,OAAA;MAAUQ,EAAE,EAAC,2BAA2B;MAACD,SAAS,EAAC,eAAe;MAAC+D,IAAI,EAAC,GAAG;MAACC,IAAI,EAAC;IAAI;MAAA1D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChG,CAAC;AAEd;AAACwD,IAAA,GARQjD,cAAc;AAUvB,SAASkD,WAAWA,CAAA,EAAG;EAAAC,GAAA;EACnB,MAAM;IACF1C,SAAS,EAAE;MAACC;IAAI;EACpB,CAAC,GAAGxC,UAAU,CAACE,eAAe,CAAC;EAC/B,oBACIK,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAAAI,QAAA,gBAC5BX,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAOO,SAAS,EAAC,OAAO;MAAAI,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5ChB,OAAA;MAAOQ,EAAE,EAAC,4BAA4B;MAACD,SAAS,EAAC,eAAe;MAAC6C,IAAI,EAAC,MAAM;MAACI,KAAK,EAAGvB,IAAI,KAAG,IAAI,GAAE,EAAE,GAACA,IAAI,CAAC0C;IAAY;MAAA9D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvH,CAAC;AAEd;AAAC0D,GAAA,CAXQD,WAAW;AAAAG,IAAA,GAAXH,WAAW;AAapB,SAASjD,YAAYA,CAAA,EAAG;EAAAqD,GAAA;EACpB,MAAM;IACFC,SAAS,EAAE;MAAEC,QAAQ;MAAEC,cAAc;MAAEC,cAAc;MAAEC,cAAc;MAAEC;IAAW,CAAC;IACnFtB,UAAU,EAAE;MAAEC,UAAU;MAAEsB,YAAY;MAAEC,aAAa;MAAEC;IAAgB,CAAC;IACxE1D,cAAc,EAAE;MAAC2D;IAAc,CAAC;IAChClF,iBAAiB,EAAE;MAAEmF;IAAmB,CAAC;IACzCC,YAAY,EAAE;MAACC;IAAU,CAAC;IAC1B1D,SAAS,EAAE;MAACC,IAAI;MAAE0D,OAAO;MAAEC;IAAQ;EACvC,CAAC,GAAGnG,UAAU,CAACE,eAAe,CAAC;EAC/B,MAAM,CAACkG,WAAW,EAAEC,cAAc,CAAC,GAAGpG,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqG,cAAc,EAAEC,iBAAiB,CAAC,GAAGtG,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMuG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,oCAAoC,CAAC,CAAC5C,KAAK;IACxF,IAAI6C,UAAU,GAAGF,QAAQ,CAACC,cAAc,CAAC,yBAAyB,CAAC,CAAC5C,KAAK;IACzE2C,QAAQ,CAACC,cAAc,CAAC,yBAAyB,CAAC,CAAC5C,KAAK,GAAG,EAAE;IAC7D,IAAI8C,UAAU,GAAGH,QAAQ,CAACC,cAAc,CAAC,gCAAgC,CAAC,CAAC5C,KAAK;IAChF,IAAI+C,cAAc,GAAGJ,QAAQ,CAACC,cAAc,CAAC,6BAA6B,CAAC,CAAC5C,KAAK;IACjF2C,QAAQ,CAACC,cAAc,CAAC,6BAA6B,CAAC,CAAC5C,KAAK,GAAG,EAAE;IACjE,IAAIgD,YAAY,GAAGL,QAAQ,CAACC,cAAc,CAAC,2BAA2B,CAAC,CAAC5C,KAAK;IAC7E2C,QAAQ,CAACC,cAAc,CAAC,2BAA2B,CAAC,CAAC5C,KAAK,GAAG,EAAE;IAC/D,IAAIiD,SAAS,GAAGxE,IAAI,CAAC0C,WAAW;IAChC;;IAEA,IAAI+B,KAAK,GAAG,EAAE;IACd;IACA,MAAMC,OAAO,GAAG,qBAAqB;IACrC,MAAMC,UAAU,GAAG,CAAC,GAAGJ,YAAY,CAACK,QAAQ,CAACF,OAAO,CAAC,CAAC;IACtD,IAAIG,cAAc,GAAC,KAAK;IAExB,KAAI,MAAMC,IAAI,IAAIH,UAAU,EAAE;MAC1B,MAAM,CAACI,CAAC,EAAEC,IAAI,EAAEC,GAAG,CAAC,GAAGH,IAAI;MAE3B,IAAI,CAACE,IAAI,CAACE,IAAI,CAAC,CAAC,EAAE;QACdT,KAAK,IAAE,qDAAqD;QAC5DI,cAAc,GAAC,IAAI;MACvB;MACA,IAAI,CAAC,cAAc,CAACM,IAAI,CAACF,GAAG,CAAC,EAAE;QAC5BR,KAAK,IAAE,yDAAyD;QAChEI,cAAc,GAAC,IAAI;MACtB;IACJ;IAEA,IAAGT,UAAU,KAAK,EAAE,IAAIA,UAAU,CAACgB,MAAM,GAAG,GAAG,IAAIb,YAAY,KAAK,EAAE,IAAIC,SAAS,KAAK,EAAE,IAAKH,UAAU,IAAI,UAAU,IAAIC,cAAc,IAAI,EAAG,IAAKD,UAAU,KAAK,UAAU,IAAIC,cAAc,CAACc,MAAM,GAAG,EAAG,IAAIP,cAAc,EAAC;MAE5N,IAAGT,UAAU,IAAI,EAAE,EAAE;QACnBK,KAAK,IAAI,yBAAyB;MACpC;MACA,IAAGL,UAAU,CAACgB,MAAM,GAAG,GAAG,EAAE;QAC1BX,KAAK,IAAI,oCAAoC;MAC/C;MACA,IAAIJ,UAAU,IAAI,UAAU,IAAIC,cAAc,IAAI,EAAE,EAAG;QACrDG,KAAK,IAAI,0DAA0D;MACrE;MACA,IAAIJ,UAAU,KAAK,UAAU,IAAIC,cAAc,CAACc,MAAM,GAAG,EAAE,EAAG;QAC5DX,KAAK,IAAI,oCAAoC;MAC/C;MACA,IAAGF,YAAY,KAAK,EAAE,EAAE;QACtBE,KAAK,IAAI,8BAA8B;MACzC;MACA,IAAGD,SAAS,KAAK,EAAE,EAAE;QACnBC,KAAK,IAAI,0BAA0B;MACrC;MAEAV,iBAAiB,CAACU,KAAK,GAAC,cAAc,CAAC;MACvCZ,cAAc,CAAC,IAAI,CAAC;MACpB;IACJ,CAAC,MAAM;MACH,IAAI;QAAA,IAAAwB,UAAA;QACA,IAAIC,SAAS;QACb,IAAGjB,UAAU,KAAK,UAAU,IAAIC,cAAc,KAAK,EAAE,EAAC;UAClDgB,SAAS,GAAG,IAAI;QACpB,CAAC,MAAM,IAAGjB,UAAU,IAAI,UAAU,IAAIC,cAAc,IAAI,EAAE,EAAC;UACvDgB,SAAS,GAAGzD,UAAU,CAACsB,YAAY,CAACoC,OAAO,CAAClB,UAAU,CAAC,CAAC;QAC5D,CAAC,MAAM,IAAGA,UAAU,IAAI,UAAU,IAAIC,cAAc,IAAI,EAAE,EAAC;UACvD,MAAMkB,QAAQ,GAAG,MAAM5H,KAAK,CAAC6H,IAAI,CAAC,oCAAoC,EAAE;YACpEvD,OAAO,EAAEoC;UACb,CAAC,CAAC;UACFlB,aAAa,CAACsC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAC/CtC,eAAe,CAACqC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,QAAQ,CAAChF,GAAG,CAAC,CAAC;UAChD8E,SAAS,GAAGE,QAAQ,CAACG,IAAI;QAC7B;QAEA,MAAMC,OAAO,GAAG,MAAMhI,KAAK,CAAC6H,IAAI,CAAC,+BAA+B,EAAE;UAC9DI,KAAK,EAAEzB,UAAU;UACjBlC,OAAO,EAAEqC,YAAY;UACrBuB,WAAW,GAAAT,UAAA,GAAEC,SAAS,cAAAD,UAAA,uBAATA,UAAA,CAAW7E,GAAG;UAC3BuF,QAAQ,EAAE/F,IAAI;UACdgG,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC;UACtBC,WAAW,EAAEjC,cAAc;UAC3BkC,MAAM,EAAEnG,IAAI,CAACQ;QACjB,CAAC,CAAC;QAEF,MAAM4F,QAAQ,GAAG,MAAMxI,KAAK,CAACyI,GAAG,CAAC,iCAAiC,CAAC;QACnE,MAAMC,KAAK,GAAGF,QAAQ,CAACT,IAAI;QAE3B7C,QAAQ,CAACwD,KAAK,CAAC;QACfpD,UAAU,CAACoD,KAAK,CAACjG,GAAG,CAACkG,CAAC,IAAIA,CAAC,CAAC/F,GAAG,CAAC,CAAC;QACjCwC,cAAc,CAAC,CAAC,GAAGsD,KAAK,CAAC,CAAC5F,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIqF,IAAI,CAACrF,CAAC,CAACoF,UAAU,CAAC,GAAG,IAAIC,IAAI,CAACtF,CAAC,CAACqF,UAAU,CAAC,CAAC,CAAC;QAC1F/C,cAAc,CAAC,CAAC,GAAGqD,KAAK,CAAC,CAAC5F,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIqF,IAAI,CAACtF,CAAC,CAACqF,UAAU,CAAC,GAAG,IAAIC,IAAI,CAACrF,CAAC,CAACoF,UAAU,CAAC,CAAC,CAAC;QAC1FjD,cAAc,CAAC,CAAC,GAAGuD,KAAK,CAAC,CAAC5F,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACrC,MAAM4F,aAAa,GAAG7I,uBAAuB,CAACgD,CAAC,EAAEA,CAAC,CAAC8C,UAAU,EAAEA,UAAU,CAAC;UAC1E,MAAMgD,aAAa,GAAG9I,uBAAuB,CAACiD,CAAC,EAAEA,CAAC,CAAC6C,UAAU,EAAEA,UAAU,CAAC;UAC1E,OAAOiD,IAAI,CAACC,GAAG,CAAC,GAAGF,aAAa,EAAE,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGH,aAAa,EAAE,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,MAAMI,kBAAkB,GAAG,MAAMhJ,KAAK,CAACyI,GAAG,CAAC,uCAAuC,CAAC;QACnF/C,cAAc,CAACsD,kBAAkB,CAACjB,IAAI,CAAC;QAEvC,MAAM,CAACkB,QAAQ,EAAEC,mBAAmB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACtDpJ,KAAK,CAACyI,GAAG,CAAC,iCAAiC,CAAC,EAC5CzI,KAAK,CAACyI,GAAG,CAAC,8BAA8BrG,IAAI,CAACQ,GAAG,EAAE,CAAC,CACpD,CAAC;QACJmD,QAAQ,CAACkD,QAAQ,CAAClB,IAAI,CAAC;QACvBjC,OAAO,CAACoD,mBAAmB,CAACnB,IAAI,CAAC;QAEjCpC,kBAAkB,CAAC,CAAC;MACxB,CAAC,CAAC,OAAO0D,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;QAC5CG,KAAK,CAAC,wBAAwB,CAAC;MACnC;IACJ;EACJ,CAAC;EAED,oBACIrJ,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACAX,OAAA;MAAKO,SAAS,EAAC,kBAAkB;MAAAI,QAAA,eAC7BX,OAAA;QAAOQ,EAAE,EAAC,0BAA0B;QAACD,SAAS,EAAC,eAAe;QAAC6C,IAAI,EAAC,QAAQ;QAAEI,KAAK,EAAC,aAAa;QAAC8F,OAAO,EAAErD;MAAS;QAAApF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrH,CAAC,EACL6E,WAAW,iBACA7F,OAAA,CAACF,aAAa;MACVgI,KAAK,EAAC,qBAAqB;MAC3ByB,OAAO,EAAExD,cAAe;MACxByD,SAAS,EAAEA,CAAA,KAAM1D,cAAc,CAAC,KAAK,CAAE;MACvC2D,QAAQ,EAAEA,CAAA,KAAM3D,cAAc,CAAC,KAAK,CAAE;MACtC4D,oBAAoB,EAAC;IAAM;MAAA7I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACJ;EAAA,eACP,CAAC;AAGX;AAAC6D,GAAA,CA7IQrD,YAAY;AAAAmI,IAAA,GAAZnI,YAAY;AA8IrB,SAASrB,kBAAkB;AAAG,IAAAc,EAAA,EAAAQ,GAAA,EAAAC,GAAA,EAAA6B,GAAA,EAAAG,GAAA,EAAAC,GAAA,EAAAO,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAG,IAAA,EAAAI,IAAA,EAAA+E,IAAA;AAAAC,YAAA,CAAA3I,EAAA;AAAA2I,YAAA,CAAAnI,GAAA;AAAAmI,YAAA,CAAAlI,GAAA;AAAAkI,YAAA,CAAArG,GAAA;AAAAqG,YAAA,CAAAlG,GAAA;AAAAkG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAA1F,GAAA;AAAA0F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAAvF,GAAA;AAAAuF,YAAA,CAAApF,IAAA;AAAAoF,YAAA,CAAAhF,IAAA;AAAAgF,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}