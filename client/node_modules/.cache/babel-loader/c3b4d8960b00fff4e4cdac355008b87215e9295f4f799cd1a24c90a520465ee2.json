{"ast":null,"code":"var _jsxFileName = \"/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/helperFunctions.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function loginRestrictionError() {\n  window.alert(\"Please login to continue!\");\n}\nexport function getTimeAgo(dateString) {\n  const now = new Date();\n  const then = new Date(dateString);\n  const seconds = Math.floor((now - then) / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  // Calculate calendar-based years and months\n  let years = now.getFullYear() - then.getFullYear();\n  let months = now.getMonth() - then.getMonth();\n  if (months < 0) {\n    years -= 1;\n    months += 12;\n  }\n  const daysDiff = now.getDate() - then.getDate();\n  if (daysDiff < 0) {\n    months -= 1;\n    if (months < 0) {\n      months += 12;\n      years -= 1;\n    }\n  }\n  if (years > 0) return `${years} year${years !== 1 ? \"s\" : \"\"} ago`;\n  if (months > 0) return `${months} month${months !== 1 ? \"s\" : \"\"} ago`;\n  if (days > 0) return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\n  if (hours > 0) return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\n  if (minutes > 0) return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\n  return `${seconds} second${seconds !== 1 ? \"s\" : \"\"} ago`;\n}\nexport function countPostComments(post, commentIDs, comments) {\n  let comment_count = 0;\n  if (post) {\n    var length = post.commentIDs.length;\n  }\n  if (length == 0) {\n    return 0;\n  } else {\n    comment_count += length;\n    for (let i = 0; i < length; i++) {\n      comment_count += countPostComments(comments[commentIDs.indexOf(post.commentIDs[i]._id)], commentIDs, comments);\n    }\n  }\n  return comment_count;\n}\nexport function arrayOfPostCommentsTime(post, comments, commentIDs, postComments = []) {\n  let length = post === null || post === void 0 ? void 0 : post.commentIDs.length;\n  if (length === 0) {\n    return postComments;\n  }\n  for (let i = 0; i < length; i++) {\n    // Handle both ObjectId and full comment object\n    const id = typeof post.commentIDs[i] === \"object\" ? post.commentIDs[i]._id : post.commentIDs[i];\n    const commentIndex = commentIDs.findIndex(cid => cid.toString() === id.toString());\n    if (commentIndex !== -1) {\n      const comment = comments[commentIndex];\n      if (comment !== null && comment !== void 0 && comment.commentedDate) {\n        postComments.push(new Date(comment.commentedDate).getTime());\n        arrayOfPostCommentsTime(comment, comments, commentIDs, postComments);\n      }\n    }\n  }\n  return postComments;\n}\nexport function arrayOfPostComments(post, comments, commentIDs, postComments = []) {\n  var _post$commentIDs;\n  if (commentIDs === undefined) {\n    return;\n  }\n  // console.log(\"LOOK HERE: \"+ commentIDs);\n  let length = post === null || post === void 0 ? void 0 : (_post$commentIDs = post.commentIDs) === null || _post$commentIDs === void 0 ? void 0 : _post$commentIDs.length;\n  if (length === 0) {\n    return postComments;\n  } else {\n    for (let i = 0; i < length; i++) {\n      const commentIndex = commentIDs.indexOf(post.commentIDs[i]._id);\n      if (commentIndex !== -1) {\n        const comment = comments[commentIndex];\n        postComments.push(comment);\n        arrayOfPostComments(comment, comments, commentIDs, postComments);\n      }\n    }\n  }\n  return postComments;\n}\nexport function countCommentDepth(commentID, postComments) {\n  let depth = 0;\n  let parentComment = postComments.find(c => c === null || c === void 0 ? void 0 : c.commentIDs.some(id => id._id.toString() === commentID._id.toString()));\n  // console.log(parentComment);\n  while (parentComment) {\n    depth++;\n    parentComment = postComments.find(c => c === null || c === void 0 ? void 0 : c.commentIDs.some(id => id._id.toString() === parentComment._id.toString()));\n    // console.log(parentComment);\n  }\n  return depth;\n}\nexport function findCommunity(post, communities) {\n  let post_community;\n  for (let i = 0; i < communities.length; i++) {\n    var _communities$i;\n    if ((_communities$i = communities[i]) !== null && _communities$i !== void 0 && _communities$i.postIDs.includes(post === null || post === void 0 ? void 0 : post._id)) {\n      post_community = communities[i].name;\n      break;\n    }\n  }\n  return post_community;\n}\nexport function findCommunityObject(post, communities) {\n  let post_community;\n  for (let i = 0; i < communities.length; i++) {\n    var _communities$i2;\n    if ((_communities$i2 = communities[i]) !== null && _communities$i2 !== void 0 && _communities$i2.postIDs.includes(post === null || post === void 0 ? void 0 : post._id)) {\n      post_community = communities[i];\n      break;\n    }\n  }\n  return post_community;\n}\nexport function findFlair(post, flairs, flairIDs) {\n  return post !== null && post !== void 0 && post.linkFlairID ? flairs[flairIDs.indexOf(post === null || post === void 0 ? void 0 : post.linkFlairID)] : null;\n}\nexport function getPostHeadingHome(post, post_community) {\n  const timeText = getTimeAgo(post.postedDate);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"post-banner\",\n    children: [post_community, \" | \", post.postedBy.displayName, \" | \", timeText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 12\n  }, this);\n}\nexport function getPostHeadingUser(post, post_community) {\n  const timeText = getTimeAgo(post.postedDate);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"post-banner\",\n    children: [post_community, \" | \", timeText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 10\n  }, this);\n}\nexport function getPostHeadingCommunity(post) {\n  const timeText = getTimeAgo(post.postedDate);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"post-banner\",\n    children: [post.postedBy.displayName, \" | \", timeText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n}\nexport function getCommentHeading(comment) {\n  const timeText = getTimeAgo(comment.commentedDate);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"post-banner\",\n    children: timeText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 10\n  }, this);\n}\nexport function getCommunityHeading(community) {\n  const timeText = getTimeAgo(community.startDate);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"post-banner\",\n    children: timeText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 10\n  }, this);\n}\nexport function getUserHeading(user) {\n  const timeText = getTimeAgo(user.startDate);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"post-banner\",\n    children: [user.firstName, \" \", user.lastName, \" | \", user.email, \" | \", timeText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 10\n  }, this);\n}\n\n//Nav Bar Functions\n\nexport function createCommunityTab(community, displayCommunityPage, currentCommunity, currentPage) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-tab\",\n    id: community._id,\n    style: {\n      backgroundColor: currentCommunity && currentCommunity._id === community._id && currentPage === \"community\" ? \"#FF4500\" : null,\n      color: currentCommunity && currentCommunity._id === community._id && currentPage === \"community\" ? \"white\" : null\n    },\n    onClick: () => displayCommunityPage(community),\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: community.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 7\n  }, this);\n}\nexport function hyperlinks(link, text) {\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: link,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 12\n  }, this);\n}\nexport function newestCommunityPostArray(community, posts, postIDs) {\n  let communityPostArray = [];\n  let community_posts = community.postIDs;\n  for (let i = 0; i < community_posts.length; i++) {\n    let post = posts[postIDs.indexOf(community_posts[i])];\n    communityPostArray.push(post);\n  }\n  communityPostArray.sort(function (a, b) {\n    return new Date(b.postedDate).getTime() - new Date(a.postedDate).getTime();\n  });\n  return communityPostArray;\n}\nexport function oldestCommunityPostArray(community, posts, postIDs) {\n  let communityPostArray = [];\n  let community_posts = community.postIDs;\n  for (let i = 0; i < community_posts.length; i++) {\n    let post = posts[postIDs.indexOf(community_posts[i])];\n    communityPostArray.push(post);\n  }\n  communityPostArray.sort(function (a, b) {\n    return new Date(a.postedDate).getTime() - new Date(b.postedDate).getTime();\n  });\n  return communityPostArray;\n}\nexport function activeCommunityPostArray(community, posts, postIDs, comments, commentIDs) {\n  let communityPostArray = [];\n  let community_posts = community.postIDs;\n  for (let i = 0; i < community_posts.length; i++) {\n    let post = posts[postIDs.indexOf(community_posts[i])];\n    communityPostArray.push(post);\n  }\n  communityPostArray.sort(function (a, b) {\n    let postComments1 = arrayOfPostComments(a, comments, commentIDs);\n    let newestComment1 = Math.max(...postComments1);\n    let postComments2 = arrayOfPostComments(b, comments, commentIDs);\n    let newestComment2 = Math.max(...postComments2);\n    return newestComment2 - newestComment1;\n  });\n  return communityPostArray;\n}\nexport function useParsedDescription(description) {\n  _s();\n  return useMemo(() => {\n    const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n    let build = [];\n    let lastIndex = 0;\n    description.replace(pattern, (match, text, url, index) => {\n      const textBefore = description.substring(lastIndex, index);\n      build.push(...insertLineBreaks(textBefore, `before-${index}`));\n      build.push(/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: text\n      }, `link-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this));\n      lastIndex = index + match.length;\n    });\n    build.push(...insertLineBreaks(description.substring(lastIndex), `after-${lastIndex}`));\n    return build;\n  }, [description]);\n}\n_s(useParsedDescription, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nexport function useParsedCommentContent(content) {\n  _s2();\n  return useMemo(() => {\n    const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n    let build = [];\n    let lastIndex = 0;\n    content.replace(pattern, (match, text, url, index) => {\n      const textBefore = content.substring(lastIndex, index);\n      build.push(...insertLineBreaks(textBefore, `before-${index}`));\n      build.push(/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: text\n      }, `link-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this));\n      lastIndex = index + match.length;\n    });\n    build.push(...insertLineBreaks(content.substring(lastIndex), `after-${lastIndex}`));\n    return build;\n  }, [content]);\n}\n_s2(useParsedCommentContent, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nexport function useParsedPostContent(content) {\n  _s3();\n  return useMemo(() => {\n    const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n    let build = [];\n    let lastIndex = 0;\n    content.replace(pattern, (match, text, url, index) => {\n      const textBefore = content.substring(lastIndex, index);\n      build.push(...insertLineBreaks(textBefore, `before-${index}`));\n      build.push(/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: text\n      }, `link-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this));\n      lastIndex = index + match.length;\n    });\n    build.push(...insertLineBreaks(content.substring(lastIndex), `after-${lastIndex}`));\n    return build;\n  }, [content]);\n}\n_s3(useParsedPostContent, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nexport function renderPostDisplayContent(post) {\n  let post_content = post.content;\n  const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n  let build = [];\n  let lastIndex = 0;\n  post_content.replace(pattern, (match, text, url, index) => {\n    build.push(post_content.substring(lastIndex, index));\n    build.push(/*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 18\n    }, this));\n    lastIndex = index + match.length;\n  });\n  build.push(...insertLineBreaks(post_content.substring(lastIndex)));\n  return build;\n}\nfunction insertLineBreaks(text, keyPrefix = \"\") {\n  return text.split('\\n').flatMap((part, i) => i === 0 ? [part] : [/*#__PURE__*/_jsxDEV(\"br\", {}, `${keyPrefix}-br-${i}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 25\n  }, this), part]);\n}\nexport function canVote(user) {\n  if (user === null) {\n    return false;\n  }\n  if (user.reputation < 50) {\n    return false;\n  }\n  return true;\n}\nexport function findPostOfComment(comment, posts, comments) {\n  if (!comment || !posts || !comments) return null;\n\n  // Step 1: Walk up the comment hierarchy to get the top-level comment\n  let currentComment = comment;\n  while (true) {\n    const parentComment = comments.find(c => c === null || c === void 0 ? void 0 : c.commentIDs.some(id => (typeof id === \"object\" ? id._id : id).toString() === currentComment._id.toString()));\n    if (!parentComment) break;\n    currentComment = parentComment;\n  }\n\n  // Step 2: Find the post that contains this top-level comment\n  for (let i = 0; i < posts.length; i++) {\n    var _currentComment;\n    const post = posts[i];\n    const topLevelCommentID = (_currentComment = currentComment) === null || _currentComment === void 0 ? void 0 : _currentComment._id.toString();\n    const match = post === null || post === void 0 ? void 0 : post.commentIDs.some(id => (typeof id === \"object\" ? id._id : id).toString() === topLevelCommentID);\n    if (match) return post;\n  }\n  return null;\n}","map":{"version":3,"names":["useMemo","jsxDEV","_jsxDEV","loginRestrictionError","window","alert","getTimeAgo","dateString","now","Date","then","seconds","Math","floor","minutes","hours","days","years","getFullYear","months","getMonth","daysDiff","getDate","countPostComments","post","commentIDs","comments","comment_count","length","i","indexOf","_id","arrayOfPostCommentsTime","postComments","id","commentIndex","findIndex","cid","toString","comment","commentedDate","push","getTime","arrayOfPostComments","_post$commentIDs","undefined","countCommentDepth","commentID","depth","parentComment","find","c","some","findCommunity","communities","post_community","_communities$i","postIDs","includes","name","findCommunityObject","_communities$i2","findFlair","flairs","flairIDs","linkFlairID","getPostHeadingHome","timeText","postedDate","className","children","postedBy","displayName","fileName","_jsxFileName","lineNumber","columnNumber","getPostHeadingUser","getPostHeadingCommunity","getCommentHeading","getCommunityHeading","community","startDate","getUserHeading","user","firstName","lastName","email","createCommunityTab","displayCommunityPage","currentCommunity","currentPage","style","backgroundColor","color","onClick","hyperlinks","link","text","href","newestCommunityPostArray","posts","communityPostArray","community_posts","sort","a","b","oldestCommunityPostArray","activeCommunityPostArray","postComments1","newestComment1","max","postComments2","newestComment2","useParsedDescription","description","_s","pattern","build","lastIndex","replace","match","url","index","textBefore","substring","insertLineBreaks","target","rel","useParsedCommentContent","content","_s2","useParsedPostContent","_s3","renderPostDisplayContent","post_content","keyPrefix","split","flatMap","part","canVote","reputation","findPostOfComment","currentComment","_currentComment","topLevelCommentID"],"sources":["/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/helperFunctions.js"],"sourcesContent":["import { useMemo } from \"react\"\n\n\nexport function loginRestrictionError(){\n  window.alert(\"Please login to continue!\");\n}\nexport function getTimeAgo(dateString) {\n  const now = new Date();\n  const then = new Date(dateString);\n\n  const seconds = Math.floor((now - then) / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours   = Math.floor(minutes / 60);\n  const days    = Math.floor(hours / 24);\n\n  // Calculate calendar-based years and months\n  let years = now.getFullYear() - then.getFullYear();\n  let months = now.getMonth() - then.getMonth();\n\n  if (months < 0) {\n    years -= 1;\n    months += 12;\n  }\n\n  const daysDiff = now.getDate() - then.getDate();\n  if (daysDiff < 0) {\n    months -= 1;\n    if (months < 0) {\n      months += 12;\n      years -= 1;\n    }\n  }\n\n  if (years > 0) return `${years} year${years !== 1 ? \"s\" : \"\"} ago`;\n  if (months > 0) return `${months} month${months !== 1 ? \"s\" : \"\"} ago`;\n  if (days > 0) return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\n  if (hours > 0) return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\n  if (minutes > 0) return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\n  return `${seconds} second${seconds !== 1 ? \"s\" : \"\"} ago`;\n}\n\n\nexport function countPostComments(post, commentIDs, comments){\n  let comment_count = 0;\n  if(post){\n    var length = post.commentIDs.length;\n  }\n  if(length == 0){\n    return 0;\n  } else {\n    comment_count += length;\n    for(let i = 0; i < length; i++){\n      comment_count += countPostComments(comments[commentIDs.indexOf(post.commentIDs[i]._id)], commentIDs, comments)\n    }\n  }\n  return comment_count;\n}\n\n  \nexport function arrayOfPostCommentsTime(post, comments, commentIDs, postComments = []) {\n  let length = post?.commentIDs.length;\n  if (length === 0) {\n      return postComments;\n  }\n\n  for (let i = 0; i < length; i++) {\n      // Handle both ObjectId and full comment object\n      const id = typeof post.commentIDs[i] === \"object\" ? post.commentIDs[i]._id : post.commentIDs[i];\n      const commentIndex = commentIDs.findIndex(cid => cid.toString() === id.toString());\n\n      if (commentIndex !== -1) {\n          const comment = comments[commentIndex];\n          if (comment?.commentedDate) {\n              postComments.push(new Date(comment.commentedDate).getTime());\n              arrayOfPostCommentsTime(comment, comments, commentIDs, postComments);\n          }\n      }\n  }\n\n  return postComments;\n}\n\n\nexport function arrayOfPostComments(post, comments, commentIDs, postComments = []) {\n  if (commentIDs===undefined) {\n    return;\n  }\n  // console.log(\"LOOK HERE: \"+ commentIDs);\n  let length = post?.commentIDs?.length;\n    if (length === 0) {\n        return postComments;\n    } else {\n        for (let i = 0; i < length; i++) {\n            const commentIndex = commentIDs.indexOf(post.commentIDs[i]._id);\n            if (commentIndex !== -1) {\n                const comment = comments[commentIndex];\n                postComments.push(comment);\n                arrayOfPostComments(comment, comments, commentIDs, postComments);\n            }\n        }\n    }\n    return postComments;\n}\n\n\nexport function countCommentDepth(commentID, postComments) {\n    let depth = 0;\n    let parentComment = postComments.find(c =>\n      c?.commentIDs.some(id => id._id.toString() === commentID._id.toString())\n    );\n    // console.log(parentComment);\n    while (parentComment) {\n      depth++;\n      parentComment = postComments.find(c =>\n        c?.commentIDs.some(id => id._id.toString() === parentComment._id.toString())\n      );\n      // console.log(parentComment);\n    }\n  \n    return depth;\n}\n\n\nexport function findCommunity(post, communities) {\n  let post_community;\n  for (let i = 0; i < communities.length; i++){\n    if(communities[i]?.postIDs.includes(post?._id)){\n      post_community = communities[i].name;\n      break;\n    }\n  }\n  return post_community;\n}\n\nexport function findCommunityObject(post, communities) {\n  let post_community;\n  for (let i = 0; i < communities.length; i++){\n    if(communities[i]?.postIDs.includes(post?._id)){\n      post_community = communities[i];\n      break;\n    }\n  }\n  return post_community;\n}\n\nexport function findFlair(post, flairs, flairIDs) {\n    return (post?.linkFlairID)?flairs[flairIDs.indexOf(post?.linkFlairID)]:null\n}\n\nexport function getPostHeadingHome(post, post_community) {\n    const timeText = getTimeAgo(post.postedDate);\n    \n    return <p className=\"post-banner\">{post_community} | {post.postedBy.displayName} | {timeText}</p>;\n}\n\nexport function getPostHeadingUser(post, post_community) {\n  const timeText = getTimeAgo(post.postedDate);\n  return <p className=\"post-banner\">{post_community} | {timeText}</p>;\n}\n\nexport function getPostHeadingCommunity(post) {\n  const timeText = getTimeAgo(post.postedDate);\n  return <p className=\"post-banner\">{post.postedBy.displayName} | {timeText}</p>;\n}\n\nexport function getCommentHeading(comment) {\n  const timeText = getTimeAgo(comment.commentedDate);\n  return <p className=\"post-banner\">{timeText}</p>;\n}\nexport function getCommunityHeading(community) {\n  const timeText = getTimeAgo(community.startDate);\n  return <p className=\"post-banner\">{timeText}</p>;\n}\nexport function getUserHeading(user) {\n  const timeText = getTimeAgo(user.startDate);\n  return <p className=\"post-banner\">{user.firstName} {user.lastName} | {user.email} | {timeText}</p>;\n}\n\n//Nav Bar Functions\n\nexport function createCommunityTab(community, displayCommunityPage, currentCommunity, currentPage) {\n    \n    return (\n      <div\n        className=\"community-tab\"\n        id={community._id}\n        style={{backgroundColor: (currentCommunity&&(currentCommunity._id===community._id)&&currentPage ===\"community\" ? \"#FF4500\" : null), color: (currentCommunity&&(currentCommunity._id===community._id)&&currentPage ===\"community\" ? \"white\" : null)}}\n        onClick={() => displayCommunityPage(community)}\n      >\n        <h3>{community.name}</h3>\n      </div>\n    );\n}\n\n\n\nexport function hyperlinks(link, text) {\n    return <a href={link}>{text}</a>;\n}\n\n\n\nexport function newestCommunityPostArray(community, posts, postIDs){\n  let communityPostArray = []\n  let community_posts = community.postIDs;\n  for(let i = 0; i < community_posts.length; i++){\n    let post = posts[postIDs.indexOf(community_posts[i])];\n    communityPostArray.push(post);\n  }\n  communityPostArray.sort(function(a, b){return new Date(b.postedDate).getTime() - new Date(a.postedDate).getTime()});\n  return communityPostArray;\n}\n\nexport function oldestCommunityPostArray(community, posts, postIDs){\n  let communityPostArray = []\n  let community_posts = community.postIDs;\n  for(let i = 0; i < community_posts.length; i++){\n    let post = posts[postIDs.indexOf(community_posts[i])];\n    communityPostArray.push(post);\n  }\n  communityPostArray.sort(function(a, b){return new Date(a.postedDate).getTime() - new Date(b.postedDate).getTime()});\n  return communityPostArray;\n}\n\nexport function activeCommunityPostArray(community, posts, postIDs, comments, commentIDs){\n  let communityPostArray = []\n  let community_posts = community.postIDs;\n  for(let i = 0; i < community_posts.length; i++){\n    let post = posts[postIDs.indexOf(community_posts[i])];\n    communityPostArray.push(post);\n  }\n  communityPostArray.sort(function(a, b){\n    let postComments1 = arrayOfPostComments(a, comments, commentIDs);\n    let newestComment1 = Math.max(...postComments1);\n\n    let postComments2 = arrayOfPostComments(b, comments, commentIDs);\n    let newestComment2 = Math.max(...postComments2);\n    return newestComment2 - newestComment1;\n  });\n  return communityPostArray;\n}\n\n\n\nexport function useParsedDescription(description) {\n  return useMemo(() => {\n    const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n    let build = [];\n    let lastIndex = 0;\n\n    description.replace(pattern, (match, text, url, index) => {\n      const textBefore = description.substring(lastIndex, index);\n      build.push(...insertLineBreaks(textBefore, `before-${index}`));\n      build.push(\n        <a key={`link-${index}`} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {text}\n        </a>\n      );\n      lastIndex = index + match.length;\n    });\n\n    build.push(...insertLineBreaks(description.substring(lastIndex), `after-${lastIndex}`));\n    return build;\n  }, [description]);\n}\n\n\n\nexport function useParsedCommentContent(content) {\n  return useMemo(() => {\n    const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n    let build = [];\n    let lastIndex = 0;\n\n    content.replace(pattern, (match, text, url, index) => {\n      const textBefore = content.substring(lastIndex, index);\n      build.push(...insertLineBreaks(textBefore, `before-${index}`));\n      build.push(\n        <a key={`link-${index}`} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {text}\n        </a>\n      );\n      lastIndex = index + match.length;\n    });\n\n    build.push(...insertLineBreaks(content.substring(lastIndex), `after-${lastIndex}`));\n    return build;\n  }, [content]);\n}\n\nexport function useParsedPostContent(content) {\n  return useMemo(() => {\n    const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n    let build = [];\n    let lastIndex = 0;\n\n    content.replace(pattern, (match, text, url, index) => {\n      const textBefore = content.substring(lastIndex, index);\n      build.push(...insertLineBreaks(textBefore, `before-${index}`));\n      build.push(\n        <a key={`link-${index}`} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {text}\n        </a>\n      );\n      lastIndex = index + match.length;\n    });\n\n    build.push(...insertLineBreaks(content.substring(lastIndex), `after-${lastIndex}`));\n    return build;\n  }, [content]);\n}\n\nexport function renderPostDisplayContent(post) {\n  let post_content = post.content;\n  const pattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g;\n  let build = [];\n  let lastIndex = 0;\n  post_content.replace(pattern, (match, text, url, index) => {\n      build.push(post_content.substring(lastIndex, index)); \n      build.push(<a key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>); \n      lastIndex = index + match.length;\n  });\n  build.push(...insertLineBreaks(post_content.substring(lastIndex))); \n  return build;\n}\n\nfunction insertLineBreaks(text, keyPrefix = \"\") {\n  return text.split('\\n').flatMap((part, i) =>\n    i === 0 ? [part] : [<br key={`${keyPrefix}-br-${i}`} />, part]\n  );\n}\n\nexport function canVote(user) {\n  if(user===null){\n    return false;\n  }\n  if(user.reputation<50) {\n    return false;\n  }\n  return true;\n\n}\n\nexport function findPostOfComment(comment, posts, comments) {\n  if (!comment || !posts || !comments) return null;\n\n  // Step 1: Walk up the comment hierarchy to get the top-level comment\n  let currentComment = comment;\n  while (true) {\n    const parentComment = comments.find(c =>\n      c?.commentIDs.some(id =>\n        (typeof id === \"object\" ? id._id : id).toString() === currentComment._id.toString()\n      )\n    );\n    if (!parentComment) break;\n    currentComment = parentComment;\n  }\n\n  // Step 2: Find the post that contains this top-level comment\n  for (let i = 0; i < posts.length; i++) {\n    const post = posts[i];\n    const topLevelCommentID = currentComment?._id.toString();\n    const match = post?.commentIDs.some(id =>\n      (typeof id === \"object\" ? id._id : id).toString() === topLevelCommentID\n    );\n    if (match) return post;\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}