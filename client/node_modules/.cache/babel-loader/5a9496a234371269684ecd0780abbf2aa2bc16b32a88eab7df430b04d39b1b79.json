{"ast":null,"code":"var _jsxFileName = \"/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/postPageView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { countPostComments, findCommunity, findFlair, getTimeAgo, arrayOfPostComments, countCommentDepth, useParsedCommentContent, useParsedPostContent, loginRestrictionError, canVote } from \"../helperFunctions\";\nimport { PhredditContext } from \"./context\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostPageView() {\n  _s();\n  const {\n    postState: {\n      post\n    },\n    showPageFunctions: {\n      currentPage\n    }\n  } = useContext(PhredditContext);\n  if (!post) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main\",\n    id: \"post-page\",\n    style: {\n      display: currentPage === 'post' ? 'block' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PostBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostComments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPageView, \"gUQYgP4WY4EzGNrkO/zbx83cH8I=\");\n_c = PostPageView;\nfunction PostBanner() {\n  _s2();\n  var _post$postedBy;\n  const {\n    postState: {\n      post,\n      setPosts\n    },\n    commentState: {\n      comments,\n      commentIDs\n    },\n    communityState: {\n      communities\n    },\n    flairState: {\n      linkFlairs,\n      linkFlairIDs\n    },\n    showPageFunctions: {\n      showCreateCommentPage,\n      showPost\n    },\n    loginState: {\n      login\n    },\n    userState: {\n      user\n    }\n  } = useContext(PhredditContext);\n  // console.log(post);\n  const [votes, setVotes] = useState(post === null || post === void 0 ? void 0 : post.votes);\n  useEffect(() => {\n    setVotes(post.votes);\n  }, [post._id, post.votes]);\n  const [upvoted, setUpvoted] = useState(false);\n  const [downvoted, setDownvoted] = useState(false);\n  const userCanVote = canVote(user);\n  const repUser = post.postedBy;\n  const cannotVoteRestriction = () => {\n    if (user === null) {\n      window.alert(\"Please log in to vote. Click Phreddit logo for login options.\");\n    } else {\n      window.alert(\"Reputation too low! You cannot vote.\");\n    }\n  };\n  useEffect(() => {\n    if (!user) {\n      setUpvoted(false);\n      setDownvoted(false);\n      return;\n    }\n    if (user.upvotedPosts.includes(post._id)) {\n      setUpvoted(true);\n      setDownvoted(false);\n    } else if (user.downvotedPosts.includes(post._id)) {\n      setDownvoted(true);\n      setUpvoted(false);\n    } else {\n      setUpvoted(false);\n      setDownvoted(false);\n    }\n  }, [post._id, user, user === null || user === void 0 ? void 0 : user.upvotedPosts.length, user === null || user === void 0 ? void 0 : user.downvotedPosts.length]);\n  const upvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n    if (upvoted) {\n      updatedVotes -= 1;\n      setUpvoted(false);\n      direction = -5;\n      user.upvotedPosts.splice(user.upvotedPosts.indexOf(post._id), 1);\n    } else if (downvoted) {\n      updatedVotes += 2;\n      setUpvoted(true);\n      setDownvoted(false);\n      direction = 15;\n      user.downvotedPosts.splice(user.downvotedPosts.indexOf(post._id), 1);\n      user.upvotedPosts.push(post._id);\n    } else {\n      updatedVotes += 1;\n      setUpvoted(true);\n      direction = 5;\n      user.upvotedPosts.push(post._id);\n      console.log(\"Upvote --> Prep update\");\n      console.log(\"Upvoted? \" + upvoted);\n    }\n    console.log(\"Before server called: Upvoted? \" + upvoted);\n    console.log(\"Call to Update Server\");\n    setVotes(updatedVotes);\n    console.log(\"After server called: Upvoted? \" + upvoted);\n    updateVotes(post, repUser, updatedVotes, direction);\n  };\n  const downvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n    if (downvoted) {\n      updatedVotes += 1;\n      setDownvoted(false);\n      direction = 10;\n      user.downvotedPosts.splice(user.downvotedPosts.indexOf(post._id), 1);\n      // console.log(user.downvotedComments);\n    } else if (upvoted) {\n      updatedVotes -= 2;\n      setDownvoted(true);\n      setUpvoted(false);\n      direction = -15;\n      user.upvotedPosts.splice(user.upvotedPosts.indexOf(post._id), 1);\n      user.downvotedPosts.push(post._id);\n      // console.log(user.downvotedComments);\n    } else {\n      updatedVotes -= 1;\n      setDownvoted(true);\n      direction = -10;\n      user.downvotedPosts.push(post._id);\n      // console.log(user.downvotedComments);\n    }\n    setVotes(updatedVotes);\n    updateVotes(post, repUser, updatedVotes, direction);\n  };\n  const updateVotes = async (post, repUser, newVotes, direction) => {\n    console.log(\"Update Server\");\n    await axios.post(\"http://127.0.0.1:8000/posts/updateVotes\", {\n      repUserID: repUser._id,\n      direction: direction,\n      votes: newVotes,\n      postID: post._id,\n      userUpVotes: user.upvotedPosts,\n      userDownVotes: user.downvotedPosts,\n      userID: user._id\n    });\n    const response = await axios.get(`http://127.0.0.1:8000/posts/${post._id}`);\n    const updatedPost = response.data;\n    const postArrayRes = await axios.get(\"http://127.0.0.1:8000/get/posts\");\n    setPosts(postArrayRes.data);\n    // console.log(updatedPost);\n    showPost(updatedPost);\n  };\n  const postCommunity = findCommunity(post, communities);\n  const flair = findFlair(post, linkFlairs, linkFlairIDs);\n  const commentCount = countPostComments(post, commentIDs, comments);\n  const addComment = () => {\n    showCreateCommentPage(post, post);\n  };\n  const parsedPost = useParsedPostContent(post.content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"post-banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-banner\",\n      children: [postCommunity, \" | \", getTimeAgo(post.postedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: [\"Posted by: \", (_post$postedBy = post.postedBy) === null || _post$postedBy === void 0 ? void 0 : _post$postedBy.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"post-title\",\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), flair && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-flair\",\n      children: flair.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: parsedPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-views-comments\",\n      children: [\"Views: \", post.views, \" | Comments: \", commentCount, \" | Votes: \", votes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post-interact\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add-comment\",\n        style: {\n          paddingRight: \"10px\",\n          display: login ? 'block' : 'none'\n        },\n        onClick: login === true ? addComment : loginRestrictionError,\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        style: {\n          cursor: \"pointer\",\n          width: \"25px\",\n          height: \"25px\",\n          fontSize: \"25px\",\n          color: upvoted ? \"#FF4500\" : \"gray\",\n          display: login ? 'block' : 'none'\n        },\n        onClick: userCanVote ? upvote : cannotVoteRestriction,\n        children: \"arrow_circle_up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reply-button\",\n        style: {\n          paddingLeft: \"5px\",\n          paddingRight: \"10px\",\n          display: login ? 'block' : 'none'\n        },\n        children: votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        style: {\n          cursor: \"pointer\",\n          width: \"25px\",\n          height: \"25px\",\n          fontSize: \"25px\",\n          color: downvoted ? \"#FF4500\" : \"gray\",\n          display: login ? 'block' : 'none'\n        },\n        onClick: userCanVote ? downvote : cannotVoteRestriction,\n        children: \"arrow_circle_down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"subsection-heading\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s2(PostBanner, \"TqftyWS3ELqCqtw62l8DXP5YKpw=\", false, function () {\n  return [useParsedPostContent];\n});\n_c2 = PostBanner;\nfunction PostComments() {\n  _s3();\n  const {\n    postState: {\n      post\n    },\n    commentState: {\n      comments,\n      commentIDs\n    }\n  } = useContext(PhredditContext);\n  if (!post || !post.commentIDs || !comments) {\n    console.log(\"PostComments: No post or comments found\", post);\n    return null; // Prevents crashing if post or comments are missing\n  }\n\n  // Get all nested comments related to this post\n  const postComments = arrayOfPostComments(post, comments, commentIDs);\n  // console.log(postComments);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"post-comments\",\n    children: postComments.filter(c => c && c._id).map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      depth: countCommentDepth(comment, postComments)\n    }, comment === null || comment === void 0 ? void 0 : comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 7\n  }, this);\n}\n_s3(PostComments, \"zixcReD995xfOdcEP86ts9haKqY=\");\n_c3 = PostComments;\nfunction Comment({\n  comment,\n  depth\n}) {\n  _s4();\n  var _comment$commentedBy;\n  const [votes, setVotes] = useState(comment === null || comment === void 0 ? void 0 : comment.votes);\n  const [upvoted, setUpvoted] = useState(false);\n  const [downvoted, setDownvoted] = useState(false);\n  const {\n    postState: {\n      post\n    },\n    showPageFunctions: {\n      showCreateCommentPage\n    },\n    loginState: {\n      login\n    },\n    userState: {\n      user\n    }\n  } = useContext(PhredditContext);\n  useEffect(() => {\n    // console.log(\"UseEffect Called\");\n    if (!user) {\n      setUpvoted(false);\n      setDownvoted(false);\n      return;\n    }\n    if (user.upvotedComments.includes(comment === null || comment === void 0 ? void 0 : comment._id)) {\n      setUpvoted(true);\n      setDownvoted(false);\n    } else if (user.downvotedComments.includes(comment === null || comment === void 0 ? void 0 : comment._id)) {\n      setDownvoted(true);\n      setUpvoted(false);\n    } else {\n      setUpvoted(false);\n      setDownvoted(false);\n    }\n    // console.log(\"Upvoted? \" + upvoted)\n  }, [comment._id, user, user === null || user === void 0 ? void 0 : user.upvotedComments.length, user === null || user === void 0 ? void 0 : user.downvotedComments.length]);\n  const userCanVote = canVote(user);\n  const repUser = comment.commentedBy;\n  const reply = () => {\n    showCreateCommentPage(comment, post);\n  };\n  const cannotVoteRestriction = () => {\n    if (user === null) {\n      window.alert(\"Please log in to vote. Click Phreddit logo for login options.\");\n    } else {\n      window.alert(\"Reputation too low! You cannot vote.\");\n    }\n  };\n  const upvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n    if (upvoted) {\n      updatedVotes -= 1;\n      setUpvoted(false);\n      direction = -5;\n      user.upvotedComments.splice(user.upvotedComments.indexOf(comment === null || comment === void 0 ? void 0 : comment._id), 1);\n      // console.log(user.upvotedComments);\n    } else if (downvoted) {\n      updatedVotes += 2;\n      setUpvoted(true);\n      setDownvoted(false);\n      direction = 15;\n      user.downvotedComments.splice(user.downvotedComments.indexOf(comment === null || comment === void 0 ? void 0 : comment._id), 1);\n      user.upvotedComments.push(comment === null || comment === void 0 ? void 0 : comment._id);\n      // console.log(user.upvotedComments);\n    } else {\n      updatedVotes += 1;\n      setUpvoted(true);\n      direction = 5;\n      user.upvotedComments.push(comment === null || comment === void 0 ? void 0 : comment._id);\n      // console.log(\"Upvote --> Prep update\");\n      // console.log(\"Upvoted? \" + upvoted);\n      // console.log(user.upvotedComments);\n    }\n    // console.log(\"Before server called: Upvoted? \" + upvoted);\n    // console.log(\"Call to Update Server\");\n    setVotes(updatedVotes);\n    // console.log(\"After server called: Upvoted? \" + upvoted);\n    updateVotes(comment, repUser, updatedVotes, direction);\n  };\n  const downvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n    if (downvoted) {\n      updatedVotes += 1;\n      setDownvoted(false);\n      direction = 10;\n      user.downvotedComments.splice(user.downvotedComments.indexOf(comment === null || comment === void 0 ? void 0 : comment._id), 1);\n      // console.log(user.downvotedComments);\n    } else if (upvoted) {\n      updatedVotes -= 2;\n      setDownvoted(true);\n      setUpvoted(false);\n      direction = -15;\n      user.upvotedComments.splice(user.upvotedComments.indexOf(comment === null || comment === void 0 ? void 0 : comment._id), 1);\n      user.downvotedComments.push(comment === null || comment === void 0 ? void 0 : comment._id);\n      // console.log(user.downvotedComments);\n    } else {\n      updatedVotes -= 1;\n      setDownvoted(true);\n      direction = -10;\n      user.downvotedComments.push(comment === null || comment === void 0 ? void 0 : comment._id);\n      // console.log(user.downvotedComments);\n    }\n    setVotes(updatedVotes);\n    updateVotes(comment, repUser, updatedVotes, direction);\n  };\n  const updateVotes = async (comment, repUser, newVotes, direction) => {\n    console.log(\"Update Server\");\n    await axios.post(\"http://127.0.0.1:8000/comments/updateVotes\", {\n      repUserID: repUser._id,\n      direction: direction,\n      votes: newVotes,\n      commentID: comment === null || comment === void 0 ? void 0 : comment._id,\n      userUpVotes: user.upvotedComments,\n      userDownVotes: user.downvotedComments,\n      userID: user._id\n    });\n  };\n  const parsedComment = useParsedCommentContent(comment.content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-comment\",\n    id: comment === null || comment === void 0 ? void 0 : comment._id,\n    style: {\n      flexDirection: \"column\",\n      marginLeft: `${depth * 30 + 10}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-comment-banner\",\n      children: [(_comment$commentedBy = comment.commentedBy) === null || _comment$commentedBy === void 0 ? void 0 : _comment$commentedBy.displayName, \" | \", getTimeAgo(comment.commentedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-comment-content\",\n      children: parsedComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-interact\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reply-button\",\n        style: {\n          cursor: \"pointer\",\n          paddingRight: \"10px\",\n          display: login ? 'block' : 'none'\n        },\n        onClick: login === true ? reply : loginRestrictionError,\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        style: {\n          cursor: \"pointer\",\n          width: \"25px\",\n          height: \"25px\",\n          fontSize: \"25px\",\n          color: upvoted ? \"#FF4500\" : \"gray\",\n          display: login ? 'block' : 'none'\n        },\n        onClick: userCanVote ? upvote : cannotVoteRestriction,\n        children: \"arrow_circle_up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reply-button\",\n        style: {\n          paddingLeft: \"5px\",\n          paddingRight: \"10px\"\n        },\n        children: login ? votes : 'Votes: ' + votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        style: {\n          cursor: \"pointer\",\n          width: \"25px\",\n          height: \"25px\",\n          fontSize: \"25px\",\n          color: downvoted ? \"#FF4500\" : \"gray\",\n          display: login ? 'block' : 'none'\n        },\n        onClick: userCanVote ? downvote : cannotVoteRestriction,\n        children: \"arrow_circle_down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n_s4(Comment, \"+cwY1AXDqTFWM+MV8QAEs+vrYGw=\", false, function () {\n  return [useParsedCommentContent];\n});\n_c4 = Comment;\nexport { PostPageView };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PostPageView\");\n$RefreshReg$(_c2, \"PostBanner\");\n$RefreshReg$(_c3, \"PostComments\");\n$RefreshReg$(_c4, \"Comment\");","map":{"version":3,"names":["React","useContext","useState","useEffect","countPostComments","findCommunity","findFlair","getTimeAgo","arrayOfPostComments","countCommentDepth","useParsedCommentContent","useParsedPostContent","loginRestrictionError","canVote","PhredditContext","axios","jsxDEV","_jsxDEV","PostPageView","_s","postState","post","showPageFunctions","currentPage","className","id","style","display","children","PostBanner","fileName","_jsxFileName","lineNumber","columnNumber","PostComments","_c","_s2","_post$postedBy","setPosts","commentState","comments","commentIDs","communityState","communities","flairState","linkFlairs","linkFlairIDs","showCreateCommentPage","showPost","loginState","login","userState","user","votes","setVotes","_id","upvoted","setUpvoted","downvoted","setDownvoted","userCanVote","repUser","postedBy","cannotVoteRestriction","window","alert","upvotedPosts","includes","downvotedPosts","length","upvote","updatedVotes","direction","splice","indexOf","push","console","log","updateVotes","downvote","newVotes","repUserID","postID","userUpVotes","userDownVotes","userID","response","get","updatedPost","data","postArrayRes","postCommunity","flair","commentCount","addComment","parsedPost","content","postedDate","displayName","title","views","paddingRight","onClick","cursor","width","height","fontSize","color","paddingLeft","_c2","_s3","postComments","filter","c","map","comment","Comment","depth","_c3","_s4","_comment$commentedBy","upvotedComments","downvotedComments","commentedBy","reply","commentID","parsedComment","flexDirection","marginLeft","commentedDate","_c4","$RefreshReg$"],"sources":["/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/postPageView.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { countPostComments, findCommunity, findFlair, getTimeAgo, arrayOfPostComments, countCommentDepth, useParsedCommentContent, useParsedPostContent, loginRestrictionError, canVote } from \"../helperFunctions\";\nimport { PhredditContext } from \"./context\";\nimport axios from 'axios';\n\nfunction PostPageView() {\n  const {\n    postState: { post },\n    showPageFunctions: { currentPage }\n  } = useContext(PhredditContext);\n\n    if (!post) return null;\n    return (\n        <div className=\"container main\" id=\"post-page\" style={{ display: currentPage === 'post' ? 'block' : 'none'}}>\n            <PostBanner />\n            <PostComments />\n        </div>\n    );\n    \n}\n\nfunction PostBanner() {\n  const {\n    postState: { post, setPosts },\n    commentState: { comments, commentIDs },\n    communityState: { communities },\n    flairState: { linkFlairs, linkFlairIDs },\n    showPageFunctions: { showCreateCommentPage, showPost },\n    loginState: { login },\n    userState: { user }\n  } = useContext(PhredditContext);\n  // console.log(post);\n  const [votes, setVotes] = useState(post?.votes);\n  useEffect(() => {\n    setVotes(post.votes);\n  }, [post._id, post.votes]);\n  const [upvoted, setUpvoted] = useState(false);\n  const [downvoted, setDownvoted] = useState(false);\n  const userCanVote = canVote(user);\n  const repUser = post.postedBy;\n\n  const cannotVoteRestriction = () => {\n    if(user===null) {\n      window.alert(\"Please log in to vote. Click Phreddit logo for login options.\")\n    } else {\n      window.alert(\"Reputation too low! You cannot vote.\")\n    } \n  }\n\n  useEffect(() => {\n    if (!user) {\n      setUpvoted(false);\n      setDownvoted(false);\n      return;\n    }\n    if (user.upvotedPosts.includes(post._id)) {\n      setUpvoted(true);\n      setDownvoted(false);\n    } else if (user.downvotedPosts.includes(post._id)) {\n      setDownvoted(true);\n      setUpvoted(false);\n    } else {\n      setUpvoted(false);\n      setDownvoted(false);\n    }\n  }, [post._id, user, user?.upvotedPosts.length, user?.downvotedPosts.length]);\n\n  const upvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n  \n    if (upvoted) {\n      updatedVotes -= 1;\n      setUpvoted(false);\n      direction = -5;\n      user.upvotedPosts.splice(user.upvotedPosts.indexOf(post._id), 1);\n    } else if (downvoted) {\n      updatedVotes += 2;\n      setUpvoted(true);\n      setDownvoted(false);\n      direction = 15;\n      user.downvotedPosts.splice(user.downvotedPosts.indexOf(post._id), 1);\n      user.upvotedPosts.push(post._id);\n    } else {\n      updatedVotes += 1;\n      setUpvoted(true);\n      direction = 5;\n      user.upvotedPosts.push(post._id);\n      console.log(\"Upvote --> Prep update\");\n      console.log(\"Upvoted? \" + upvoted);\n    }\n    console.log(\"Before server called: Upvoted? \" + upvoted);\n    console.log(\"Call to Update Server\");\n    setVotes(updatedVotes);\n    console.log(\"After server called: Upvoted? \" + upvoted);\n    updateVotes(post, repUser, updatedVotes, direction);\n    \n  };\n  \n  const downvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n  \n    if (downvoted) {\n      updatedVotes += 1;\n      setDownvoted(false);\n      direction = 10;\n      user.downvotedPosts.splice(user.downvotedPosts.indexOf(post._id), 1);\n      // console.log(user.downvotedComments);\n    } else if (upvoted) {\n      updatedVotes -= 2;\n      setDownvoted(true);\n      setUpvoted(false);\n      direction = -15;\n      user.upvotedPosts.splice(user.upvotedPosts.indexOf(post._id), 1);\n      user.downvotedPosts.push(post._id);\n      // console.log(user.downvotedComments);\n    } else {\n      updatedVotes -= 1;\n      setDownvoted(true);\n      direction = -10;\n      user.downvotedPosts.push(post._id);\n      // console.log(user.downvotedComments);\n    }\n  \n    setVotes(updatedVotes);\n    updateVotes(post, repUser, updatedVotes, direction);\n  };\n  \n  const updateVotes = async (post, repUser, newVotes, direction) => {\n    console.log(\"Update Server\");\n    await axios.post(\"http://127.0.0.1:8000/posts/updateVotes\", {\n      repUserID: repUser._id,\n      direction: direction,\n      votes: newVotes,\n      postID: post._id,\n      userUpVotes: user.upvotedPosts,\n      userDownVotes: user.downvotedPosts,\n      userID: user._id\n    });\n    const response = await axios.get(`http://127.0.0.1:8000/posts/${post._id}`);\n    const updatedPost = response.data;\n    const postArrayRes = await axios.get(\"http://127.0.0.1:8000/get/posts\");\n    setPosts(postArrayRes.data);\n    // console.log(updatedPost);\n    showPost(updatedPost);\n  };\n\n  const postCommunity = findCommunity(post, communities);\n    const flair = findFlair(post, linkFlairs, linkFlairIDs);\n    const commentCount = countPostComments(post, commentIDs, comments);\n    const addComment = () => {\n      showCreateCommentPage(post, post);\n    }\n    const parsedPost = useParsedPostContent(post.content);\n\n    return (\n        <div className=\"container\" id=\"post-banner\">\n            <p className=\"post-banner\">{postCommunity} | {getTimeAgo(post.postedDate)}</p>\n            <p className=\"post-content\">Posted by: {post.postedBy?.displayName}</p>\n            <h2 className=\"post-title\">{post.title}</h2>\n            {flair && <p className=\"post-flair\">{flair.content}</p>}\n            <p className=\"post-content\">{parsedPost}</p>\n            <p className=\"post-views-comments\">Views: {post.views} | Comments: {commentCount} | Votes: {votes} </p>\n            <div id=\"post-interact\">\n              <button id=\"add-comment\" style = {{paddingRight:\"10px\", display: login? 'block' : 'none'}} onClick={login===true?addComment:loginRestrictionError}>\n                  Add a Comment\n              </button>\n              <i className=\"material-icons\" style={{ cursor: \"pointer\", width: \"25px\", height: \"25px\", fontSize: \"25px\", color:upvoted?\"#FF4500\":\"gray\", display: login? 'block' : 'none' }} onClick={userCanVote?upvote:cannotVoteRestriction}>arrow_circle_up</i>\n              <p className=\"reply-button\" style={{ paddingLeft:\"5px\",paddingRight:\"10px\", display: login? 'block' : 'none'}} >{votes}</p>\n              <i className=\"material-icons\" style={{ cursor: \"pointer\", width: \"25px\", height: \"25px\", fontSize: \"25px\", color:downvoted?\"#FF4500\":\"gray\", display: login? 'block' : 'none' }} onClick={userCanVote?downvote:cannotVoteRestriction}>arrow_circle_down</i>\n            </div>\n\n            <div className=\"divider-container\">\n                <div className=\"post-divider\"></div>\n            </div>\n            <h3 className=\"subsection-heading\">Comments</h3>\n        </div>\n    );\n}\n\nfunction PostComments() {\n  const {\n    postState: { post },\n    commentState: { comments, commentIDs },\n  } = useContext(PhredditContext);\n  if (!post || !post.commentIDs || !comments) {\n      console.log(\"PostComments: No post or comments found\", post);\n      return null; // Prevents crashing if post or comments are missing\n    }\n  \n    // Get all nested comments related to this post\n    const postComments = arrayOfPostComments(post, comments, commentIDs);\n    // console.log(postComments);\n    \n    return (\n      <div className=\"container\" id=\"post-comments\">\n        {postComments.filter(c => c && c._id).map((comment) => (\n          <Comment \n            key={comment?._id} \n            comment={comment} \n            depth={countCommentDepth(comment, postComments)}\n            \n          />\n        ))}\n      </div>\n    );\n}\n\nfunction Comment({comment, depth}) {\n  const [votes, setVotes] = useState(comment?.votes);\n  const [upvoted, setUpvoted] = useState(false);\n  const [downvoted, setDownvoted] = useState(false);\n  const {\n    postState: { post },\n    showPageFunctions: { showCreateCommentPage },\n    loginState: { login },\n    userState: { user }\n  } = useContext(PhredditContext);\n\n  useEffect(() => {\n    // console.log(\"UseEffect Called\");\n    if (!user) {\n      setUpvoted(false);\n      setDownvoted(false);\n      return;\n    }\n    if (user.upvotedComments.includes(comment?._id)) {\n      setUpvoted(true);\n      setDownvoted(false);\n    } else if (user.downvotedComments.includes(comment?._id)) {\n      setDownvoted(true);\n      setUpvoted(false);\n    } else {\n      setUpvoted(false);\n      setDownvoted(false);\n    }\n    // console.log(\"Upvoted? \" + upvoted)\n  }, [comment._id, user, user?.upvotedComments.length, user?.downvotedComments.length]);\n\n  const userCanVote = canVote(user);\n  const repUser = comment.commentedBy;\n\n  const reply = () => {\n    showCreateCommentPage(comment, post)\n  }\n\n  const cannotVoteRestriction = () => {\n    if(user===null) {\n      window.alert(\"Please log in to vote. Click Phreddit logo for login options.\")\n    } else {\n      window.alert(\"Reputation too low! You cannot vote.\")\n    } \n  }\n\n  const upvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n  \n    if (upvoted) {\n      updatedVotes -= 1;\n      setUpvoted(false);\n      direction = -5;\n      user.upvotedComments.splice(user.upvotedComments.indexOf(comment?._id), 1);\n      // console.log(user.upvotedComments);\n    } else if (downvoted) {\n      updatedVotes += 2;\n      setUpvoted(true);\n      setDownvoted(false);\n      direction = 15;\n      user.downvotedComments.splice(user.downvotedComments.indexOf(comment?._id), 1);\n      user.upvotedComments.push(comment?._id);\n      // console.log(user.upvotedComments);\n    } else {\n      updatedVotes += 1;\n      setUpvoted(true);\n      direction = 5;\n      user.upvotedComments.push(comment?._id);\n      // console.log(\"Upvote --> Prep update\");\n      // console.log(\"Upvoted? \" + upvoted);\n      // console.log(user.upvotedComments);\n    }\n    // console.log(\"Before server called: Upvoted? \" + upvoted);\n    // console.log(\"Call to Update Server\");\n    setVotes(updatedVotes);\n    // console.log(\"After server called: Upvoted? \" + upvoted);\n    updateVotes(comment, repUser, updatedVotes, direction);\n  };\n  \n  const downvote = () => {\n    let updatedVotes = votes;\n    let direction = 0;\n  \n    if (downvoted) {\n      updatedVotes += 1;\n      setDownvoted(false);\n      direction = 10;\n      user.downvotedComments.splice(user.downvotedComments.indexOf(comment?._id), 1);\n      // console.log(user.downvotedComments);\n    } else if (upvoted) {\n      updatedVotes -= 2;\n      setDownvoted(true);\n      setUpvoted(false);\n      direction = -15;\n      user.upvotedComments.splice(user.upvotedComments.indexOf(comment?._id), 1);\n      user.downvotedComments.push(comment?._id);\n      // console.log(user.downvotedComments);\n    } else {\n      updatedVotes -= 1;\n      setDownvoted(true);\n      direction = -10;\n      user.downvotedComments.push(comment?._id);\n      // console.log(user.downvotedComments);\n    }\n  \n    setVotes(updatedVotes);\n    updateVotes(comment, repUser, updatedVotes, direction);\n  };\n  \n  const updateVotes = async (comment, repUser, newVotes, direction) => {\n    console.log(\"Update Server\");\n    await axios.post(\"http://127.0.0.1:8000/comments/updateVotes\", {\n      repUserID: repUser._id,\n      direction: direction,\n      votes: newVotes,\n      commentID: comment?._id,\n      userUpVotes: user.upvotedComments,\n      userDownVotes: user.downvotedComments,\n      userID: user._id\n    });\n  };\n\n  const parsedComment = useParsedCommentContent(comment.content);\n  return (\n    <div className=\"post-comment\" id={comment?._id} style={{flexDirection: \"column\",marginLeft: `${depth * 30 + 10}px`}}>\n      <p className=\"post-comment-banner\">{comment.commentedBy?.displayName} | {getTimeAgo(comment.commentedDate)}</p>\n      <p className=\"post-comment-content\">{parsedComment}</p>\n      <div id=\"comment-interact\">\n        <p className=\"reply-button\" style={{ cursor: \"pointer\", paddingRight:\"10px\", display: login? 'block' : 'none'}} onClick={login===true?reply:loginRestrictionError}>Reply</p>\n        <i className=\"material-icons\" style={{ cursor: \"pointer\", width: \"25px\", height: \"25px\", fontSize: \"25px\", color:upvoted?\"#FF4500\":\"gray\", display: login? 'block' : 'none' }} onClick={userCanVote?upvote:cannotVoteRestriction}>arrow_circle_up</i>\n        <p className=\"reply-button\" style={{ paddingLeft:\"5px\",paddingRight:\"10px\"}} >{login? votes : 'Votes: ' + votes}</p>\n        <i className=\"material-icons\" style={{ cursor: \"pointer\", width: \"25px\", height: \"25px\", fontSize: \"25px\", color:downvoted?\"#FF4500\":\"gray\", display: login? 'block' : 'none' }} onClick={userCanVote?downvote:cannotVoteRestriction}>arrow_circle_down</i>\n      </div>\n    </div>\n  );\n}\n  \n\n\nexport { PostPageView };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}