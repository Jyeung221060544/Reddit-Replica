{"ast":null,"code":"var _jsxFileName = \"/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/editComment.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { PhredditContext } from \"./context\";\nimport axios from 'axios';\nimport ConfirmWindow from \"./confirm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditComment() {\n  _s();\n  const {\n    showPageFunctions: {\n      currentPage\n    },\n    editState: {\n      editUser\n    }\n  } = useContext(PhredditContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main\",\n    id: \"create-comment-page\",\n    style: {\n      display: currentPage === 'edit-comment' ? 'block' : 'none',\n      width: editUser ? \"100%\" : \"100%\",\n      height: editUser ? \"100%\" : \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"create-comment-page-inner\",\n      children: /*#__PURE__*/_jsxDEV(Contents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(EditComment, \"dZhVWqvdwsRBrsaCg33NZAW1R0M=\");\n_c = EditComment;\nfunction Contents() {\n  _s2();\n  const [commentID, setCommentID] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"create-comment-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-title\",\n      id: \"content-banner\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentInquiry, {\n      setCommentID: setCommentID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SubmitButton, {\n        commentID: commentID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CancelEditButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s2(Contents, \"oxQY+7AcpFwtMjYiK86plrq8Tp8=\");\n_c2 = Contents;\nfunction CommentInquiry({\n  setCommentID\n}) {\n  _s3();\n  const {\n    editState: {\n      editComment\n    },\n    showPageFunctions: {\n      currentPage\n    }\n  } = useContext(PhredditContext);\n  const [content, setContent] = useState(editComment === null || editComment === void 0 ? void 0 : editComment.content);\n  useEffect(() => {\n    if (editComment !== null && editComment !== void 0 && editComment.content) {\n      setContent(editComment === null || editComment === void 0 ? void 0 : editComment.content);\n    }\n    if (editComment) {\n      setCommentID(editComment._id);\n    }\n  }, [editComment, currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"label\",\n      children: \"Comment *\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"edit-comment-content-input\",\n      className: \"input-textbox\",\n      rows: \"5\",\n      cols: \"33\",\n      value: content || \"\",\n      onChange: e => {\n        setContent(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"input-note\",\n      children: \"Max Length: 500 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s3(CommentInquiry, \"y925y5eWvRDqGcXfWetIiIoZEsY=\");\n_c3 = CommentInquiry;\nfunction UsernameInquiry() {\n  _s4();\n  const {\n    userState: {\n      user\n    }\n  } = useContext(PhredditContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"label\",\n      children: \"Username *\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"create-comment-username-input\",\n      className: \"input-textbox\",\n      type: \"text\",\n      value: user === null ? \"\" : user.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s4(UsernameInquiry, \"omTmOaZ+8wPQg3FKFb6aqgnkD9g=\");\n_c4 = UsernameInquiry;\nfunction SubmitButton({\n  commentID\n}) {\n  _s5();\n  const {\n    commentState: {\n      setComments,\n      setCommentIDs,\n      comments\n    },\n    postState: {\n      post,\n      setPost\n    },\n    showPageFunctions: {\n      showPost,\n      handleShowUserProfilePage\n    },\n    refreshControl: {\n      setRefreshTrigger\n    },\n    userState: {\n      user,\n      setUser\n    },\n    editState: {\n      editComment,\n      setEditComment,\n      editUser\n    }\n  } = useContext(PhredditContext);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const makeComment = async () => {\n    let comment_content = document.getElementById(\"edit-comment-content-input\").value;\n    let comment_user = user.displayName;\n    // document.getElementById(\"create-comment-username-input\").value = \"\";\n    let build = \"\";\n    //Error checks on hyperlinks\n    const pattern = /\\[(.*?)\\]\\((.*?)\\)/g;\n    const hyperlinks = [...comment_content.matchAll(pattern)];\n    let hyperlinkIssue = false;\n    for (const link of hyperlinks) {\n      const [_, text, url] = link;\n      if (!text.trim()) {\n        build += \"The text inside [] cannotbe empty for hyperlinks \\n\";\n        hyperlinkIssue = true;\n      }\n      if (!/^https?:\\/\\//.test(url)) {\n        build += \"The hyperlink must start with 'http://' or 'https://'\\n\";\n        hyperlinkIssue = true;\n      }\n    }\n    // console.log(\"Hyperlinks\");\n    // console.log(hyperlinks);\n\n    if (comment_content == \"\" || comment_content.length > 500 || comment_user == \"\" || hyperlinkIssue) {\n      if (comment_content == \"\") {\n        build += \"Please enter a comment!\\n\";\n      }\n      if (comment_content.length > 500) {\n        build += \"Comment is too long!\\n\";\n      }\n      setConfirmMessage(build + \"\\nTry again!\");\n      setShowConfirm(true);\n    } else {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/editcomment\", {\n          content: comment_content,\n          commentID: commentID\n        });\n        const newComment = response.data;\n        setEditComment(newComment);\n        const updatedComments = await axios.get(\"http://127.0.0.1:8000/get/comments\");\n        setComments(updatedComments.data);\n        setCommentIDs(updatedComments.data.map(comment => comment._id));\n        const updatedUserResponse = await axios.get(`http://127.0.0.1:8000/user/${user._id}`);\n        setUser(updatedUserResponse.data);\n        if (!editUser) {\n          const updatedPostResponse = await axios.get(`http://127.0.0.1:8000/posts/${post._id}`);\n          setPost(updatedPostResponse.data);\n          showPost(updatedPostResponse.data);\n        } else {\n          handleShowUserProfilePage();\n        }\n      } catch (err) {\n        console.error(\"Failed to submit comment:\", err);\n        alert(\"Something went wrong when submitting the comment.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"create-comment-button-input\",\n        className: \"submit-button\",\n        type: \"button\",\n        value: \"Submit Comment\",\n        onClick: makeComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(ConfirmWindow, {\n      title: \"Error Editing Comment\",\n      message: confirmMessage,\n      onConfirm: () => setShowConfirm(false),\n      onCancel: () => setShowConfirm(false),\n      confirmButtonMessage: \"Okay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s5(SubmitButton, \"pQVOEhiTcwnGh+OXfnHza0YzCU0=\");\n_c5 = SubmitButton;\nfunction CancelEditButton() {\n  _s6();\n  const {\n    showPageFunctions: {\n      handleShowUserProfilePage\n    }\n  } = useContext(PhredditContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"create-post-button-input\",\n      className: \"submit-button\",\n      type: \"button\",\n      value: \"Cancel Edit\",\n      onClick: handleShowUserProfilePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n_s6(CancelEditButton, \"0ZedXUGOrxHLbtf1Un0paLsIsd0=\");\n_c6 = CancelEditButton;\nfunction DeleteButton() {\n  _s7();\n  const {\n    editState: {\n      editComment\n    },\n    userState: {\n      user,\n      setUser\n    },\n    postState: {\n      setPosts\n    },\n    showPageFunctions: {\n      handleShowUserProfilePage\n    }\n  } = useContext(PhredditContext);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const deleteComment = async () => {\n    try {\n      await axios.delete(`http://127.0.0.1:8000/delete/comment/${editComment._id}`);\n      const updatedUser = await axios.get(`http://127.0.0.1:8000/user/${user._id}`);\n      const updatedPosts = await axios.get(\"http://127.0.0.1:8000/get/posts\");\n      setPosts(updatedPosts.data);\n      setUser(updatedUser.data);\n      handleShowUserProfilePage();\n    } catch (err) {\n      console.error(\"Delete failed:\", err);\n      alert(\"Failed to delete comment.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"create-post-button-input\",\n        className: \"submit-button\",\n        type: \"button\",\n        value: \"Delete Comment\",\n        onClick: deleteComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(ConfirmWindow, {\n      title: \"Confirm Deletion\",\n      message: `Are you sure you want to delete this comment?`,\n      onConfirm: () => {\n        deleteComment();\n        setShowConfirm(false);\n      },\n      onCancel: () => setShowConfirm(false),\n      confirmButtonMessage: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s7(DeleteButton, \"8M1Mk5LG4QziHwfue2DJtHjKGF0=\");\n_c7 = DeleteButton;\nexport { EditComment };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"EditComment\");\n$RefreshReg$(_c2, \"Contents\");\n$RefreshReg$(_c3, \"CommentInquiry\");\n$RefreshReg$(_c4, \"UsernameInquiry\");\n$RefreshReg$(_c5, \"SubmitButton\");\n$RefreshReg$(_c6, \"CancelEditButton\");\n$RefreshReg$(_c7, \"DeleteButton\");","map":{"version":3,"names":["React","useContext","useState","useEffect","PhredditContext","axios","ConfirmWindow","jsxDEV","_jsxDEV","Fragment","_Fragment","EditComment","_s","showPageFunctions","currentPage","editState","editUser","className","id","style","display","width","height","children","Contents","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","commentID","setCommentID","CommentInquiry","gap","SubmitButton","DeleteButton","CancelEditButton","_c2","_s3","editComment","content","setContent","_id","rows","cols","value","onChange","e","target","_c3","UsernameInquiry","_s4","userState","user","type","displayName","_c4","_s5","commentState","setComments","setCommentIDs","comments","postState","post","setPost","showPost","handleShowUserProfilePage","refreshControl","setRefreshTrigger","setUser","setEditComment","showConfirm","setShowConfirm","confirmMessage","setConfirmMessage","makeComment","comment_content","document","getElementById","comment_user","build","pattern","hyperlinks","matchAll","hyperlinkIssue","link","_","text","url","trim","test","length","response","newComment","data","updatedComments","get","map","comment","updatedUserResponse","updatedPostResponse","err","console","error","alert","onClick","title","message","onConfirm","onCancel","confirmButtonMessage","_c5","_s6","_c6","_s7","setPosts","deleteComment","delete","updatedUser","updatedPosts","_c7","$RefreshReg$"],"sources":["/Users/nekoro/Desktop/CSE316/GitHub/Reddit-Replica/client/src/components/editComment.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { PhredditContext } from \"./context\";\nimport axios from 'axios';\nimport ConfirmWindow from \"./confirm\";\n\nfunction EditComment() {\n    const { \n        showPageFunctions: { currentPage },\n        editState: {editUser}\n    } = useContext(PhredditContext);\n    \n    return (\n        <div className=\"container main\" id=\"create-comment-page\" style={{ display: currentPage === 'edit-comment' ? 'block' : 'none', width:editUser?\"100%\":\"100%\", height:editUser?\"100%\":\"100%\"}}>\n            <div className=\"container\" id=\"create-comment-page-inner\">\n                <Contents />\n            </div>\n      </div>\n    );\n}\n\nfunction Contents() {\n    const [commentID, setCommentID] = useState(null); \n    return (\n        <div id=\"create-comment-body\">\n            <div className=\"create-title\" id=\"content-banner\">\n                <h2>Edit a Comment</h2>\n            </div>\n            <CommentInquiry setCommentID={setCommentID} />\n            {/* <UsernameInquiry /> */}\n            <div style={{display:\"flex\", gap:\"20px\"}}>\n                <SubmitButton commentID={commentID} />\n                <DeleteButton/>\n                <CancelEditButton />\n            </div>\n        </div>\n    );\n}\n\nfunction CommentInquiry({ setCommentID }) {\n    const {\n        editState: {editComment},\n        showPageFunctions: {currentPage}\n    } = useContext(PhredditContext)\n    const [content, setContent] = useState(editComment?.content);\n\n    useEffect(()=> {\n        if(editComment?.content) {\n            setContent(editComment?.content);\n        }\n        if (editComment) {\n            setCommentID(editComment._id);\n        }\n    }, [editComment, currentPage])\n    \n    return (\n        <div className=\"input-container\">\n            <p className=\"label\">Comment *</p>\n            <textarea \n                id=\"edit-comment-content-input\" \n                className=\"input-textbox\" \n                rows=\"5\" \n                cols=\"33\"\n                value={content || \"\"}\n                onChange={(e)=>{setContent(e.target.value)}}\n                ></textarea>\n            <p className=\"input-note\">Max Length: 500 characters</p>\n        </div>\n    );\n}\n\nfunction UsernameInquiry() {\n    const {\n        userState: {user},\n    } = useContext(PhredditContext);\n    return (\n        <div className=\"input-container\">\n            <p className=\"label\">Username *</p>\n            <input id=\"create-comment-username-input\" className=\"input-textbox\" type=\"text\" value={(user===null)?\"\":user.displayName}/>\n        </div>\n    );\n}\n\nfunction SubmitButton({ commentID }) {\n    const {\n        commentState: { setComments, setCommentIDs, comments },\n        postState: { post, setPost },\n        showPageFunctions: { showPost, handleShowUserProfilePage },\n        refreshControl: { setRefreshTrigger },\n        userState: {user, setUser},\n        editState: { editComment, setEditComment, editUser }\n    } = useContext(PhredditContext);\n\n    const [showConfirm, setShowConfirm] = useState(false);\n    const [confirmMessage, setConfirmMessage] = useState(\"\");\n    \n    \n\n    const makeComment = async () => {\n        let comment_content = document.getElementById(\"edit-comment-content-input\").value;\n        let comment_user = user.displayName;\n        // document.getElementById(\"create-comment-username-input\").value = \"\";\n        let build = \"\";\n        //Error checks on hyperlinks\n        const pattern = /\\[(.*?)\\]\\((.*?)\\)/g;\n        const hyperlinks = [...comment_content.matchAll(pattern)];\n        let hyperlinkIssue=false;\n\n        for(const link of hyperlinks) {\n            const [_, text, url] = link;\n\n            if (!text.trim()) {\n                build+=\"The text inside [] cannotbe empty for hyperlinks \\n\"\n                hyperlinkIssue=true;\n            }\n            if (!/^https?:\\/\\//.test(url)) {\n               build+=\"The hyperlink must start with 'http://' or 'https://'\\n\"\n               hyperlinkIssue=true;\n            }\n        }\n        // console.log(\"Hyperlinks\");\n        // console.log(hyperlinks);\n\n        if(comment_content == \"\" || comment_content.length > 500 || comment_user == \"\" || hyperlinkIssue){\n\n            if(comment_content == \"\") {\n                build += \"Please enter a comment!\\n\";\n                }\n                if(comment_content.length > 500) {\n                build += \"Comment is too long!\\n\";\n                }\n\n            setConfirmMessage(build+\"\\nTry again!\");\n            setShowConfirm(true);\n\n        } else {\n            try {\n                const response = await axios.post(\"http://127.0.0.1:8000/editcomment\", {\n                    content: comment_content,\n                    commentID: commentID\n                });\n\n                const newComment = response.data;\n                setEditComment(newComment);\n\n                const updatedComments = await axios.get(\"http://127.0.0.1:8000/get/comments\");\n                setComments(updatedComments.data);\n                setCommentIDs(updatedComments.data.map(comment => comment._id));\n\n                const updatedUserResponse = await axios.get(`http://127.0.0.1:8000/user/${user._id}`);\n                setUser(updatedUserResponse.data);\n\n                if(!editUser){\n                    const updatedPostResponse = await axios.get(`http://127.0.0.1:8000/posts/${post._id}`);\n                    setPost(updatedPostResponse.data);\n                    showPost(updatedPostResponse.data);\n                } else {\n                    handleShowUserProfilePage();\n                }\n                \n                \n            } catch (err) {\n                console.error(\"Failed to submit comment:\", err);\n                alert(\"Something went wrong when submitting the comment.\");\n            }\n        }\n    }\n\n    return (\n        <>\n        <div className=\"button-container\">\n            <input id=\"create-comment-button-input\" className=\"submit-button\" type=\"button\"  value=\"Submit Comment\" onClick={makeComment}/>\n        </div>\n        {showConfirm && (\n            <ConfirmWindow\n                title=\"Error Editing Comment\"\n                message={confirmMessage}\n                onConfirm={() => setShowConfirm(false)}\n                onCancel={() => setShowConfirm(false)}\n                confirmButtonMessage=\"Okay\"\n            />\n        )}\n        </>\n    );\n}\n\nfunction CancelEditButton() {\n    const{\n        showPageFunctions:{handleShowUserProfilePage},\n    } = useContext(PhredditContext);\n    return(\n        <div className=\"button-container\">\n            <input id=\"create-post-button-input\" className=\"submit-button\" type=\"button\"  value=\"Cancel Edit\" onClick={handleShowUserProfilePage} />\n        </div>\n    );\n}\n\nfunction DeleteButton() {\n    const {\n        editState: { editComment },\n        userState: { user, setUser },\n        postState: { setPosts },\n        showPageFunctions: { handleShowUserProfilePage },\n    } = useContext(PhredditContext);\n    const [showConfirm, setShowConfirm] = useState(false);\n    \n    const deleteComment = async () => {\n        try {\n            await axios.delete(`http://127.0.0.1:8000/delete/comment/${editComment._id}`);\n            const updatedUser = await axios.get(`http://127.0.0.1:8000/user/${user._id}`);\n            const updatedPosts = await axios.get(\"http://127.0.0.1:8000/get/posts\");\n            setPosts(updatedPosts.data);\n            setUser(updatedUser.data);\n            handleShowUserProfilePage();\n        } catch (err) {\n            console.error(\"Delete failed:\", err);\n            alert(\"Failed to delete comment.\");\n        }\n    };\n\n    return (\n        <>\n        <div className=\"button-container\">\n            <input id=\"create-post-button-input\" className=\"submit-button\" type=\"button\"  value=\"Delete Comment\" onClick={deleteComment}/>\n        </div>\n            {showConfirm && (\n                <ConfirmWindow\n                    title=\"Confirm Deletion\"\n                    message={`Are you sure you want to delete this comment?`}\n                    onConfirm={() => {\n                        deleteComment();\n                        setShowConfirm(false);\n                    }}\n                    onCancel={() => setShowConfirm(false)}\n                    confirmButtonMessage=\"Confirm\"\n                />\n            )}\n        </>\n        \n    );\n}\n\nexport { EditComment }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}